[{"/home/tome/lighthouse/projectG/src/index.js":"1","/home/tome/lighthouse/projectG/src/app/store.js":"2","/home/tome/lighthouse/projectG/src/reportWebVitals.js":"3","/home/tome/lighthouse/projectG/src/App.js":"4","/home/tome/lighthouse/projectG/src/pages/local/teamReducer.js":"5","/home/tome/lighthouse/projectG/src/pages/canvas/index.js":"6","/home/tome/lighthouse/projectG/src/pages/game/features/turns/turn.js":"7","/home/tome/lighthouse/projectG/src/pages/game/features/board/boardSlice.js":"8","/home/tome/lighthouse/projectG/src/pages/local/index.js":"9","/home/tome/lighthouse/projectG/src/pages/game/index.js":"10","/home/tome/lighthouse/projectG/src/pages/how-to-play/index.js":"11","/home/tome/lighthouse/projectG/src/pages/Navigation/index.js":"12","/home/tome/lighthouse/projectG/src/pages/canvas/canvas.js":"13","/home/tome/lighthouse/projectG/src/pages/canvas/drawPrompt.js":"14","/home/tome/lighthouse/projectG/src/pages/local/Actions.js":"15","/home/tome/lighthouse/projectG/src/pages/local/Player.js":"16","/home/tome/lighthouse/projectG/src/pages/local/AddPlayerForm.js":"17","/home/tome/lighthouse/projectG/src/pages/game/features/board/Board.js":"18","/home/tome/lighthouse/projectG/src/pages/game/features/score/Score.js":"19","/home/tome/lighthouse/projectG/src/pages/canvas/canvasUtils.js":"20","/home/tome/lighthouse/projectG/src/pages/local/utilities.js":"21","/home/tome/lighthouse/projectG/src/pages/game/features/board/cardRow/CardRow.js":"22","/home/tome/lighthouse/projectG/src/pages/game/features/board/cardRow/card/Card.js":"23"},{"size":654,"mtime":1685732646079,"results":"24","hashOfConfig":"25"},{"size":485,"mtime":1686608420390,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":1683921511723,"results":"27","hashOfConfig":"25"},{"size":782,"mtime":1689793521733,"results":"28","hashOfConfig":"25"},{"size":1571,"mtime":1688411734170,"results":"29","hashOfConfig":"25"},{"size":668,"mtime":1690914189742,"results":"30","hashOfConfig":"25"},{"size":1660,"mtime":1687874964076,"results":"31","hashOfConfig":"25"},{"size":5618,"mtime":1690571910235,"results":"32","hashOfConfig":"25"},{"size":2186,"mtime":1689388539424,"results":"33","hashOfConfig":"25"},{"size":986,"mtime":1689365020767,"results":"34","hashOfConfig":"25"},{"size":307,"mtime":1684177632603,"results":"35","hashOfConfig":"25"},{"size":478,"mtime":1687632037239,"results":"36","hashOfConfig":"25"},{"size":2750,"mtime":1690914267779,"results":"37","hashOfConfig":"25"},{"size":1612,"mtime":1690919537539,"results":"38","hashOfConfig":"25"},{"size":484,"mtime":1686769780440,"results":"39","hashOfConfig":"25"},{"size":437,"mtime":1684546455849,"results":"40","hashOfConfig":"25"},{"size":784,"mtime":1686329281941,"results":"41","hashOfConfig":"25"},{"size":817,"mtime":1687829726730,"results":"42","hashOfConfig":"25"},{"size":2903,"mtime":1687874928115,"results":"43","hashOfConfig":"25"},{"size":956,"mtime":1689274322449,"results":"44","hashOfConfig":"25"},{"size":105,"mtime":1684509725803,"results":"45","hashOfConfig":"25"},{"size":263,"mtime":1685383149416,"results":"46","hashOfConfig":"25"},{"size":1922,"mtime":1687739547281,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xf0c4v",{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/tome/lighthouse/projectG/src/index.js",[],[],"/home/tome/lighthouse/projectG/src/app/store.js",[],[],"/home/tome/lighthouse/projectG/src/reportWebVitals.js",[],[],"/home/tome/lighthouse/projectG/src/App.js",[],[],"/home/tome/lighthouse/projectG/src/pages/local/teamReducer.js",[],[],"/home/tome/lighthouse/projectG/src/pages/canvas/index.js",[],[],"/home/tome/lighthouse/projectG/src/pages/game/features/turns/turn.js",[],[],"/home/tome/lighthouse/projectG/src/pages/game/features/board/boardSlice.js",[],[],"/home/tome/lighthouse/projectG/src/pages/local/index.js",[],[],"/home/tome/lighthouse/projectG/src/pages/game/index.js",["120"],[],"\nimport React from 'react';\nimport { Score } from './features/score/Score';\nimport { Board } from './features/board/Board';\n// Add import statements below\nimport {useDispatch} from 'react-redux'\nimport {setBoard} from './features/board/boardSlice'\nimport { endTurn, startMatch } from './features/turns/turn';\n\n\nconst Game = () => {\n  // Add dispatch variable below\n  const dispatch = useDispatch();\n\n  const startGameHandler = () => {\n    // Add action dispatch below\n    dispatch(startMatch())\n  };\n\n  const tryAgainHandler = () => {\n    // Add action dispatch below\n    dispatch(endTurn())\n  };\n\n  return (\n    <div className=\"Game\">\n      <Score />\n      <Board />\n      <footer className=\"footer\">\n        <button onClick={startGameHandler} className=\"start-button\">\n          Start Game\n        </button>\n        <button onClick={tryAgainHandler} className=\"try-new-pair-button\">\n          Next Team Turn \n        </button>\n      </footer>\n    </div>\n  );\n};\n\nexport default Game;\n","/home/tome/lighthouse/projectG/src/pages/how-to-play/index.js",[],[],"/home/tome/lighthouse/projectG/src/pages/Navigation/index.js",[],[],"/home/tome/lighthouse/projectG/src/pages/canvas/canvas.js",["121","122"],[],"import React, { useRef, useState, useEffect } from 'react';\nimport { startDrawing, draw, stopDrawing, clearCanvas } from './canvasUtils';\nimport { Link } from 'react-router-dom';\nimport { startMatch } from '../game/features/turns/turn';\nimport { useDispatch } from 'react-redux';\n\nconst CanvasComponent = ({ startTimer, intervalRef }) => {\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [isEraserMode, setIsEraserMode] = useState(false);\n  const [lastX, setLastX] = useState(0);\n  const [lastY, setLastY] = useState(0);\n\n  const handleMouseDown = (e) => {\n    startDrawing(isDrawing, setIsDrawing, setLastX, setLastY, e);\n    startTimer(); // Start the timer on mousedown\n  };\n\n  const handleMouseMove = (e) => {\n    draw(isDrawing, isEraserMode, lastX, lastY, setLastX, setLastY, e, canvasRef.current);\n  };\n\n  const handleMouseUp = () => {\n    stopDrawing(setIsDrawing);\n  };\n\n  const handleMouseOut = () => {\n    stopDrawing(setIsDrawing);\n  };\n\n  const toggleEraserMode = () => {\n    setIsEraserMode(!isEraserMode);\n  };\n\n  const toggleClearCanvas = () => {\n    clearCanvas(canvasRef);\n  };\n\n  const saveCanvasDrawing = () => {\n    // Your code to capture and save the canvas drawing goes here\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const imageData = canvas.toDataURL(); // Get the base64 encoded image data\n    // Now, you can do whatever you want with the captured drawing data, e.g., send it to a server, save it in state, etc.\n    console.log('Drawing saved:', imageData);\n  };\n\n  const dispatch = useDispatch();\n  const startGameHandler = () => {\n    // Add action dispatch below\n    dispatch(startMatch());\n  };\n\n  useEffect(() => {\n    return () => {\n      clearInterval(intervalRef.current); // Clear the interval on unmount\n    };\n  }, [intervalRef]); // Empty dependency array ensures the effect runs only once (on component mount)\n\n  return (\n    <div className='canvas'>\n      <canvas\n        ref={canvasRef}\n        width={800}\n        height={600}\n        onMouseDown={handleMouseDown}\n        onMouseMove={handleMouseMove}\n        onMouseUp={handleMouseUp}\n        onMouseOut={handleMouseOut}\n      />\n      <div>\n        <button onClick={toggleEraserMode} className='draw-erase'>\n          {isEraserMode ? 'Draw' : 'Erase'}\n        </button>\n        <button onClick={toggleClearCanvas} className='Clear-canvas'>\n          Clear Drawing\n        </button>\n        <button onClick={saveCanvasDrawing}>Save Drawing</button>\n      </div>\n\n      <footer>\n        <Link to='/game' className='button-link' onClick={startGameHandler}>\n          <h2>Next</h2>\n        </Link>\n      </footer>\n    </div>\n  );\n};\n\nexport default CanvasComponent;\n","/home/tome/lighthouse/projectG/src/pages/canvas/drawPrompt.js",["123"],[],"import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\n\nconst DisplayWordsComponent = ({ remainingTime }) => {\n  const board = useSelector((state) => state.board);\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [currentTeam, setCurrentTeam] = useState(1);\n  const [gameFinished, setGameFinished] = useState(false);\n\n  const intervalRef = useRef(null);\n\n  useEffect(() => {\n    const team1Words = board.filter((_, index) => index % 2 === 0);\n    const team2Words = board.filter((_, index) => index % 2 === 1);\n    const teamsHaveWords = team1Words.length > 0 || team2Words.length > 0;\n\n    setGameFinished(currentWordIndex === board.length - 1);\n\n    if (teamsHaveWords) {\n      if (remainingTime === 1) {\n        setCurrentWordIndex((prevIndex) => (prevIndex + 1) % board.length);\n        setCurrentTeam((prevTeam) => (prevTeam === 1 ? 2 : 1));\n      }\n    }\n  }, [board, remainingTime]);\n\n  useEffect(() => {\n    if (gameFinished) {\n      clearInterval(intervalRef.current);\n    }\n  }, [gameFinished]);\n\n  if (gameFinished) {\n    return (\n      <div>\n        <h2>Completed! Press Next.</h2>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <h2>Displaying Words:</h2>\n      <h3>Team {currentTeam} Words:</h3>\n      <ul>\n        {board.map((card, index) => (\n          <li key={card.id} style={{ display: index === currentWordIndex ? 'list-item' : 'none' }}>\n            {card.contents}\n          </li>\n        ))}\n      </ul>\n      <p>Time Remaining: {remainingTime} seconds</p>\n    </div>\n  );\n};\n\nexport default DisplayWordsComponent;\n","/home/tome/lighthouse/projectG/src/pages/local/Actions.js",[],[],"/home/tome/lighthouse/projectG/src/pages/local/Player.js",[],[],"/home/tome/lighthouse/projectG/src/pages/local/AddPlayerForm.js",[],[],"/home/tome/lighthouse/projectG/src/pages/game/features/board/Board.js",[],[],"/home/tome/lighthouse/projectG/src/pages/game/features/score/Score.js",[],[],"/home/tome/lighthouse/projectG/src/pages/canvas/canvasUtils.js",[],[],"/home/tome/lighthouse/projectG/src/pages/local/utilities.js",[],[],"/home/tome/lighthouse/projectG/src/pages/game/features/board/cardRow/CardRow.js",[],[],"/home/tome/lighthouse/projectG/src/pages/game/features/board/cardRow/card/Card.js",[],[],{"ruleId":"124","severity":1,"message":"125","line":7,"column":9,"nodeType":"126","messageId":"127","endLine":7,"endColumn":17},{"ruleId":"124","severity":1,"message":"128","line":42,"column":11,"nodeType":"126","messageId":"127","endLine":42,"endColumn":18},{"ruleId":"129","severity":1,"message":"130","line":56,"column":33,"nodeType":"126","endLine":56,"endColumn":40},{"ruleId":"129","severity":1,"message":"131","line":25,"column":6,"nodeType":"132","endLine":25,"endColumn":28,"suggestions":"133"},"no-unused-vars","'setBoard' is defined but never used.","Identifier","unusedVar","'context' is assigned a value but never used.","react-hooks/exhaustive-deps","The ref value 'intervalRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'intervalRef.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has a missing dependency: 'currentWordIndex'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setGameFinished' needs the current value of 'currentWordIndex'.","ArrayExpression",["134"],{"desc":"135","fix":"136"},"Update the dependencies array to be: [board, currentWordIndex, remainingTime]",{"range":"137","text":"138"},[936,958],"[board, currentWordIndex, remainingTime]"]