{"ast":null,"code":"import React from'react';// Add import statements below\nimport{useSelector,useDispatch}from'react-redux';import{selectCurrentTurn}from'../../../turns/turn';import{selectVisibleIDs,flipCard,selectMatchedIDs,resetCards}from'../../boardSlice';import cardLogo from'./runningmanlogo.png';import{endTurn}from'../../../turns/turn';import{jsx as _jsx}from\"react/jsx-runtime\";export var Card=function Card(_ref){var id=_ref.id,contents=_ref.contents;// Add selected data and dispatch variables below\nvar visibleIDs=useSelector(selectVisibleIDs);var matchedIDs=useSelector(selectMatchedIDs);var teamID=useSelector(selectCurrentTurn);var dispatch=useDispatch();// flip card action\nvar flipHandler=function flipHandler(id){// Add action dispatch below\ndispatch(flipCard(id,teamID));};var ResetCardHandler=function ResetCardHandler(){// Add action dispatch below\nsetTimeout(function(){dispatch(resetCards());},2000);};var EndTurn=function EndTurn(){dispatch(endTurn());};var cardStyle='resting';var click=function click(){return flipHandler(id,teamID);};//let cardText = <img src={cardLogo} className=\"logo-placeholder\" alt=\"Card option\" />\nvar cardText=/*#__PURE__*/_jsx(\"img\",{src:cardLogo,className:\"logo-placeholder\",alt:\"Card option\"});;// 1st if statement\n// implement card id array membership check\nif(visibleIDs.includes(id)||matchedIDs.includes(id)){cardText=contents;click=function click(){};}// 2nd if statement\n// implement card id array membership check\nif(matchedIDs.includes(id)){cardStyle='matched';}// 3rd if statement\n// implement number of flipped cards check\nif(visibleIDs.length===2){click=function click(){};}//turn the not match red\nif(visibleIDs.length>=2&&!matchedIDs.includes(id)){cardStyle='no-match';ResetCardHandler();click=EndTurn();}return/*#__PURE__*/_jsx(\"button\",{onClick:click,className:\"card \".concat(cardStyle),children:cardText});};","map":{"version":3,"names":["React","useSelector","useDispatch","selectCurrentTurn","selectVisibleIDs","flipCard","selectMatchedIDs","resetCards","cardLogo","endTurn","jsx","_jsx","Card","_ref","id","contents","visibleIDs","matchedIDs","teamID","dispatch","flipHandler","ResetCardHandler","setTimeout","EndTurn","cardStyle","click","cardText","src","className","alt","includes","length","onClick","concat","children"],"sources":["/home/tome/lighthouse/projectG/src/pages/game/features/board/cardRow/card/Card.js"],"sourcesContent":["import React from 'react';\n// Add import statements below\nimport {useSelector, useDispatch} from 'react-redux'\nimport { selectCurrentTurn } from '../../../turns/turn';\nimport {selectVisibleIDs, flipCard, selectMatchedIDs, resetCards} from '../../boardSlice'\nimport cardLogo from './runningmanlogo.png'\nimport { endTurn } from '../../../turns/turn';\n\nexport const Card = ({ id, contents }) => {\n  // Add selected data and dispatch variables below\n  const visibleIDs = useSelector(selectVisibleIDs)\n  const matchedIDs = useSelector(selectMatchedIDs)\n  const teamID = useSelector(selectCurrentTurn)\n  const dispatch = useDispatch()\n  // flip card action\n  const flipHandler = (id) => {\n    // Add action dispatch below\n    dispatch(flipCard(id, teamID))\n  };\n  const ResetCardHandler = () => {\n    // Add action dispatch below\n    \n    setTimeout(()=>{\n      dispatch(resetCards())\n    },2000)\n  };\n  const EndTurn = () => {\n    dispatch(endTurn())\n  }\n  let cardStyle = 'resting'\n  let click = () => flipHandler(id, teamID);\n  \n  //let cardText = <img src={cardLogo} className=\"logo-placeholder\" alt=\"Card option\" />\n  let cardText = <img src={cardLogo} className=\"logo-placeholder\" alt=\"Card option\" />;\n\n  ;\n\n  // 1st if statement\n  // implement card id array membership check\n  if (visibleIDs.includes(id) || matchedIDs.includes(id)) {\n    cardText = contents;\n    click = () => {};\n  }\n\n  // 2nd if statement\n  // implement card id array membership check\n  if (matchedIDs.includes(id)) {\n    cardStyle = 'matched';\n  }\n\n  // 3rd if statement\n  // implement number of flipped cards check\n  if (visibleIDs.length === 2) {\n    click = () => {};\n  }\n  //turn the not match red\n  if (visibleIDs.length >= 2 && !matchedIDs.includes(id)){\n    cardStyle = 'no-match'\n    ResetCardHandler()\n    click = EndTurn();\n  }\n  return (\n    <button onClick={click} className={`card ${cardStyle}`}>\n      {cardText}\n    </button>\n  );\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB;AACA,OAAQC,WAAW,CAAEC,WAAW,KAAO,aAAa,CACpD,OAASC,iBAAiB,KAAQ,qBAAqB,CACvD,OAAQC,gBAAgB,CAAEC,QAAQ,CAAEC,gBAAgB,CAAEC,UAAU,KAAO,kBAAkB,CACzF,MAAO,CAAAC,QAAQ,KAAM,sBAAsB,CAC3C,OAASC,OAAO,KAAQ,qBAAqB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9C,MAAO,IAAM,CAAAC,IAAI,CAAG,QAAP,CAAAA,IAAIA,CAAAC,IAAA,CAAyB,IAAnB,CAAAC,EAAE,CAAAD,IAAA,CAAFC,EAAE,CAAEC,QAAQ,CAAAF,IAAA,CAARE,QAAQ,CACjC;AACA,GAAM,CAAAC,UAAU,CAAGf,WAAW,CAACG,gBAAgB,CAAC,CAChD,GAAM,CAAAa,UAAU,CAAGhB,WAAW,CAACK,gBAAgB,CAAC,CAChD,GAAM,CAAAY,MAAM,CAAGjB,WAAW,CAACE,iBAAiB,CAAC,CAC7C,GAAM,CAAAgB,QAAQ,CAAGjB,WAAW,CAAC,CAAC,CAC9B;AACA,GAAM,CAAAkB,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAIN,EAAE,CAAK,CAC1B;AACAK,QAAQ,CAACd,QAAQ,CAACS,EAAE,CAAEI,MAAM,CAAC,CAAC,CAChC,CAAC,CACD,GAAM,CAAAG,gBAAgB,CAAG,QAAnB,CAAAA,gBAAgBA,CAAA,CAAS,CAC7B;AAEAC,UAAU,CAAC,UAAI,CACbH,QAAQ,CAACZ,UAAU,CAAC,CAAC,CAAC,CACxB,CAAC,CAAC,IAAI,CAAC,CACT,CAAC,CACD,GAAM,CAAAgB,OAAO,CAAG,QAAV,CAAAA,OAAOA,CAAA,CAAS,CACpBJ,QAAQ,CAACV,OAAO,CAAC,CAAC,CAAC,CACrB,CAAC,CACD,GAAI,CAAAe,SAAS,CAAG,SAAS,CACzB,GAAI,CAAAC,KAAK,CAAG,SAAAA,MAAA,QAAM,CAAAL,WAAW,CAACN,EAAE,CAAEI,MAAM,CAAC,GAEzC;AACA,GAAI,CAAAQ,QAAQ,cAAGf,IAAA,QAAKgB,GAAG,CAAEnB,QAAS,CAACoB,SAAS,CAAC,kBAAkB,CAACC,GAAG,CAAC,aAAa,CAAE,CAAC,CAEpF,CAEA;AACA;AACA,GAAIb,UAAU,CAACc,QAAQ,CAAChB,EAAE,CAAC,EAAIG,UAAU,CAACa,QAAQ,CAAChB,EAAE,CAAC,CAAE,CACtDY,QAAQ,CAAGX,QAAQ,CACnBU,KAAK,CAAG,SAAAA,MAAA,CAAM,CAAC,CAAC,CAClB,CAEA;AACA;AACA,GAAIR,UAAU,CAACa,QAAQ,CAAChB,EAAE,CAAC,CAAE,CAC3BU,SAAS,CAAG,SAAS,CACvB,CAEA;AACA;AACA,GAAIR,UAAU,CAACe,MAAM,GAAK,CAAC,CAAE,CAC3BN,KAAK,CAAG,SAAAA,MAAA,CAAM,CAAC,CAAC,CAClB,CACA;AACA,GAAIT,UAAU,CAACe,MAAM,EAAI,CAAC,EAAI,CAACd,UAAU,CAACa,QAAQ,CAAChB,EAAE,CAAC,CAAC,CACrDU,SAAS,CAAG,UAAU,CACtBH,gBAAgB,CAAC,CAAC,CAClBI,KAAK,CAAGF,OAAO,CAAC,CAAC,CACnB,CACA,mBACEZ,IAAA,WAAQqB,OAAO,CAAEP,KAAM,CAACG,SAAS,SAAAK,MAAA,CAAUT,SAAS,CAAG,CAAAU,QAAA,CACpDR,QAAQ,CACH,CAAC,CAEb,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}