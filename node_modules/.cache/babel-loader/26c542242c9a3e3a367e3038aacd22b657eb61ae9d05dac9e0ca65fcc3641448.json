{"ast":null,"code":"import _objectSpread from\"/home/tome/lighthouse/projectG/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";var initialState={currentTurn:0,lastActionTimestamp:0,isMatchOver:false,winner:undefined};export var turnReducer=function turnReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case\"END_TURN\":var currentTimestamp=Date.now();if(currentTimestamp-state.lastActionTimestamp<1000){// If less than a second has passed since the last action, return the current state\nreturn state;}return _objectSpread(_objectSpread({},state),{},{currentTurn:state.currentTurn===1?2:1,lastActionTimestamp:currentTimestamp});case\"SHOW_WINNER\":var _action$payload=action.payload,team1Name=_action$payload.team1Name,team1Score=_action$payload.team1Score,team2Name=_action$payload.team2Name,team2Score=_action$payload.team2Score;var winner;if(team1Score>team2Score){winner=team1Name;//console.log(`team 2${team1Score} team 2${team2Score}`)\n}else if(team2Score>team1Score){winner=team2Name;console.log(\"team 2\".concat(team1Score,\" team 2\").concat(team2Score));}else{winner=\"Tie\";}return _objectSpread(_objectSpread({},state),{},{isMatchOver:true,currentTurn:0,winner:winner});case\"START_MATCH\":return _objectSpread(_objectSpread({},state),{},{currentTurn:1,isMatchOver:false});default:return state;}};export var endTurn=function endTurn(){return{type:\"END_TURN\"};};export var matchOver=function matchOver(team1Name,team1Score,team2Name,team2Score){return{type:\"SHOW_WINNER\",payload:{team1Name:team1Name,team1Score:team1Score,team2Name:team2Name,team2Score:team2Score}};};export var startMatch=function startMatch(){return{type:\"START_MATCH\"};};export var selectCurrentTurn=function selectCurrentTurn(state){return state.turn.currentTurn;};","map":{"version":3,"names":["initialState","currentTurn","lastActionTimestamp","isMatchOver","winner","undefined","turnReducer","state","arguments","length","action","type","currentTimestamp","Date","now","_objectSpread","_action$payload","payload","team1Name","team1Score","team2Name","team2Score","console","log","concat","endTurn","matchOver","startMatch","selectCurrentTurn","turn"],"sources":["/home/tome/lighthouse/projectG/src/pages/game/features/turns/turn.js"],"sourcesContent":["const initialState = {\n  currentTurn: 0,\n  lastActionTimestamp: 0,\n  isMatchOver: false,\n  winner: undefined\n};\n\nexport const turnReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"END_TURN\":\n      const currentTimestamp = Date.now();\n      if (currentTimestamp - state.lastActionTimestamp < 1000) {\n        // If less than a second has passed since the last action, return the current state\n        return state;\n      }\n      return {\n        ...state,\n        currentTurn: state.currentTurn === 1 ? 2 : 1,\n        lastActionTimestamp: currentTimestamp,\n      };\n    case \"SHOW_WINNER\":\n      const { team1Name, team1Score, team2Name, team2Score } = action.payload;\n      let winner;\n\n      if (team1Score > team2Score) {\n        winner = team1Name;\n        //console.log(`team 2${team1Score} team 2${team2Score}`)\n      } else if (team2Score > team1Score) {\n        winner = team2Name; \n        console.log(`team 2${team1Score} team 2${team2Score}`)\n      } else {\n        winner = \"Tie\";\n      }\n\n      return {\n        ...state,\n        isMatchOver: true,\n        currentTurn: 0,\n        winner: winner\n      }\n    case \"START_MATCH\": \n      return {\n        ...state,\n        currentTurn : 1,\n        isMatchOver: false\n      }\n    default:\n      return state;\n  }\n};\n\nexport const endTurn = () => ({\n  type: \"END_TURN\",\n});\n\nexport const matchOver = (team1Name, team1Score, team2Name, team2Score) => ({\n  type: \"SHOW_WINNER\",\n  payload: { team1Name, team1Score, team2Name, team2Score },\n});\n\nexport const startMatch = () => ({\n  type: \"START_MATCH\",\n});\n\nexport const selectCurrentTurn = (state) => state.turn.currentTurn;\n"],"mappings":"mHAAA,GAAM,CAAAA,YAAY,CAAG,CACnBC,WAAW,CAAE,CAAC,CACdC,mBAAmB,CAAE,CAAC,CACtBC,WAAW,CAAE,KAAK,CAClBC,MAAM,CAAEC,SACV,CAAC,CAED,MAAO,IAAM,CAAAC,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAA,CAAqC,IAAjC,CAAAC,KAAK,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAH,SAAA,CAAAG,SAAA,IAAGR,YAAY,IAAE,CAAAU,MAAM,CAAAF,SAAA,CAAAC,MAAA,GAAAD,SAAA,IAAAH,SAAA,CACtD,OAAQK,MAAM,CAACC,IAAI,EACjB,IAAK,UAAU,CACb,GAAM,CAAAC,gBAAgB,CAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CACnC,GAAIF,gBAAgB,CAAGL,KAAK,CAACL,mBAAmB,CAAG,IAAI,CAAE,CACvD;AACA,MAAO,CAAAK,KAAK,CACd,CACA,OAAAQ,aAAA,CAAAA,aAAA,IACKR,KAAK,MACRN,WAAW,CAAEM,KAAK,CAACN,WAAW,GAAK,CAAC,CAAG,CAAC,CAAG,CAAC,CAC5CC,mBAAmB,CAAEU,gBAAgB,GAEzC,IAAK,aAAa,CAChB,IAAAI,eAAA,CAAyDN,MAAM,CAACO,OAAO,CAA/DC,SAAS,CAAAF,eAAA,CAATE,SAAS,CAAEC,UAAU,CAAAH,eAAA,CAAVG,UAAU,CAAEC,SAAS,CAAAJ,eAAA,CAATI,SAAS,CAAEC,UAAU,CAAAL,eAAA,CAAVK,UAAU,CACpD,GAAI,CAAAjB,MAAM,CAEV,GAAIe,UAAU,CAAGE,UAAU,CAAE,CAC3BjB,MAAM,CAAGc,SAAS,CAClB;AACF,CAAC,IAAM,IAAIG,UAAU,CAAGF,UAAU,CAAE,CAClCf,MAAM,CAAGgB,SAAS,CAClBE,OAAO,CAACC,GAAG,UAAAC,MAAA,CAAUL,UAAU,YAAAK,MAAA,CAAUH,UAAU,CAAE,CAAC,CACxD,CAAC,IAAM,CACLjB,MAAM,CAAG,KAAK,CAChB,CAEA,OAAAW,aAAA,CAAAA,aAAA,IACKR,KAAK,MACRJ,WAAW,CAAE,IAAI,CACjBF,WAAW,CAAE,CAAC,CACdG,MAAM,CAAEA,MAAM,GAElB,IAAK,aAAa,CAChB,OAAAW,aAAA,CAAAA,aAAA,IACKR,KAAK,MACRN,WAAW,CAAG,CAAC,CACfE,WAAW,CAAE,KAAK,GAEtB,QACE,MAAO,CAAAI,KAAK,CAChB,CACF,CAAC,CAED,MAAO,IAAM,CAAAkB,OAAO,CAAG,QAAV,CAAAA,OAAOA,CAAA,QAAU,CAC5Bd,IAAI,CAAE,UACR,CAAC,EAAC,CAEF,MAAO,IAAM,CAAAe,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAIR,SAAS,CAAEC,UAAU,CAAEC,SAAS,CAAEC,UAAU,QAAM,CAC1EV,IAAI,CAAE,aAAa,CACnBM,OAAO,CAAE,CAAEC,SAAS,CAATA,SAAS,CAAEC,UAAU,CAAVA,UAAU,CAAEC,SAAS,CAATA,SAAS,CAAEC,UAAU,CAAVA,UAAW,CAC1D,CAAC,EAAC,CAEF,MAAO,IAAM,CAAAM,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAA,QAAU,CAC/BhB,IAAI,CAAE,aACR,CAAC,EAAC,CAEF,MAAO,IAAM,CAAAiB,iBAAiB,CAAG,QAApB,CAAAA,iBAAiBA,CAAIrB,KAAK,QAAK,CAAAA,KAAK,CAACsB,IAAI,CAAC5B,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}