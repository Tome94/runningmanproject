{"ast":null,"code":"const initialState = {\n  currentTurn: 0,\n  lastActionTimestamp: 0,\n  isMatchOver: false,\n  winner: undefined\n};\nexport const turnReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"END_TURN\":\n      const currentTimestamp = Date.now();\n      if (currentTimestamp - state.lastActionTimestamp < 1000) {\n        // If less than a second has passed since the last action, return the current state\n        return state;\n      }\n      return {\n        ...state,\n        currentTurn: state.currentTurn === 1 ? 2 : 1,\n        lastActionTimestamp: currentTimestamp\n      };\n    case \"SHOW_WINNER\":\n      const {\n        team1Score,\n        team2Score\n      } = action.payload;\n      return {\n        ...state,\n        isMatchOver: true,\n        currentTurn: 0\n      };\n    case \"START_MATCH\":\n      return {\n        ...state,\n        currentTurn: 1,\n        isMatchOver: false\n      };\n    default:\n      return state;\n  }\n};\nexport const endTurn = () => ({\n  type: \"END_TURN\"\n});\nexport const matchOver = (team1Score, team2Score) => ({\n  type: \"SHOW_WINNER\",\n  payload: {\n    team1Score,\n    team2Score\n  }\n});\nexport const startMatch = () => ({\n  type: \"START_MATCH\"\n});\nexport const selectCurrentTurn = state => state.turn.currentTurn;","map":{"version":3,"names":["initialState","currentTurn","lastActionTimestamp","isMatchOver","winner","undefined","turnReducer","state","arguments","length","action","type","currentTimestamp","Date","now","team1Score","team2Score","payload","endTurn","matchOver","startMatch","selectCurrentTurn","turn"],"sources":["/home/tome/lighthouse/projectG/projectg/src/pages/game/features/turns/turn.js"],"sourcesContent":["const initialState = {\n  currentTurn: 0,\n  lastActionTimestamp: 0,\n  isMatchOver: false,\n  winner: undefined\n};\n\nexport const turnReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"END_TURN\":\n      const currentTimestamp = Date.now();\n      if (currentTimestamp - state.lastActionTimestamp < 1000) {\n        // If less than a second has passed since the last action, return the current state\n        return state;\n      }\n      return {\n        ...state,\n        currentTurn: state.currentTurn === 1 ? 2 : 1,\n        lastActionTimestamp: currentTimestamp,\n      };\n    case \"SHOW_WINNER\":\n      const { team1Score, team2Score } = action.payload;\n      return {\n        ...state,\n        isMatchOver: true,\n        currentTurn: 0\n      }\n    case \"START_MATCH\": \n      return {\n        ...state,\n        currentTurn : 1,\n        isMatchOver: false\n      }\n    default:\n      return state;\n  }\n};\n\nexport const endTurn = () => ({\n  type: \"END_TURN\",\n});\n\nexport const matchOver = (team1Score, team2Score) => ({\n  type: \"SHOW_WINNER\",\n  payload: { team1Score, team2Score },\n});\n\nexport const startMatch = () => ({\n  type: \"START_MATCH\",\n});\n\nexport const selectCurrentTurn = (state) => state.turn.currentTurn;\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACnBC,WAAW,EAAE,CAAC;EACdC,mBAAmB,EAAE,CAAC;EACtBC,WAAW,EAAE,KAAK;EAClBC,MAAM,EAAEC;AACV,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAH,SAAA,GAAAG,SAAA,MAAGR,YAAY;EAAA,IAAEU,MAAM,GAAAF,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAH,SAAA;EACtD,QAAQK,MAAM,CAACC,IAAI;IACjB,KAAK,UAAU;MACb,MAAMC,gBAAgB,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;MACnC,IAAIF,gBAAgB,GAAGL,KAAK,CAACL,mBAAmB,GAAG,IAAI,EAAE;QACvD;QACA,OAAOK,KAAK;MACd;MACA,OAAO;QACL,GAAGA,KAAK;QACRN,WAAW,EAAEM,KAAK,CAACN,WAAW,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC;QAC5CC,mBAAmB,EAAEU;MACvB,CAAC;IACH,KAAK,aAAa;MAChB,MAAM;QAAEG,UAAU;QAAEC;MAAW,CAAC,GAAGN,MAAM,CAACO,OAAO;MACjD,OAAO;QACL,GAAGV,KAAK;QACRJ,WAAW,EAAE,IAAI;QACjBF,WAAW,EAAE;MACf,CAAC;IACH,KAAK,aAAa;MAChB,OAAO;QACL,GAAGM,KAAK;QACRN,WAAW,EAAG,CAAC;QACfE,WAAW,EAAE;MACf,CAAC;IACH;MACE,OAAOI,KAAK;EAChB;AACF,CAAC;AAED,OAAO,MAAMW,OAAO,GAAGA,CAAA,MAAO;EAC5BP,IAAI,EAAE;AACR,CAAC,CAAC;AAEF,OAAO,MAAMQ,SAAS,GAAGA,CAACJ,UAAU,EAAEC,UAAU,MAAM;EACpDL,IAAI,EAAE,aAAa;EACnBM,OAAO,EAAE;IAAEF,UAAU;IAAEC;EAAW;AACpC,CAAC,CAAC;AAEF,OAAO,MAAMI,UAAU,GAAGA,CAAA,MAAO;EAC/BT,IAAI,EAAE;AACR,CAAC,CAAC;AAEF,OAAO,MAAMU,iBAAiB,GAAId,KAAK,IAAKA,KAAK,CAACe,IAAI,CAACrB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}