{"ast":null,"code":"var _jsxFileName = \"/home/tome/lighthouse/projectG/projectg/src/pages/canvas/canvas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport { startDrawing, draw, stopDrawing, clearCanvas } from './canvasUtils';\nimport { Link } from 'react-router-dom';\nimport { startMatch } from '../game/features/turns/turn';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CanvasComponent = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [isEraserMode, setIsEraserMode] = useState(false);\n  const [lastX, setLastX] = useState(0);\n  const [lastY, setLastY] = useState(0);\n  const [isSaving, setIsSaving] = useState(false);\n  const [saveTimeout, setSaveTimeout] = useState(null); // To store the save timer\n\n  useEffect(() => {\n    if (isSaving) {\n      // If saving is ongoing, clear the save timer and start a new one\n      if (saveTimeout) {\n        clearTimeout(saveTimeout);\n      }\n      const newSaveTimeout = setTimeout(saveCanvasDrawing, 15000);\n      setSaveTimeout(newSaveTimeout);\n    }\n  }, [isSaving]);\n  const handleMouseDown = e => {\n    startTimer();\n    startDrawing(isDrawing, setIsDrawing, setLastX, setLastY, e);\n    setIsSaving(true); // Start the saving process when the user starts drawing\n  };\n\n  const handleMouseMove = e => {\n    draw(isDrawing, isEraserMode, lastX, lastY, setLastX, setLastY, e, canvasRef.current);\n  };\n  const handleMouseUp = () => {\n    stopDrawing(setIsDrawing);\n  };\n  const handleMouseOut = () => {\n    stopDrawing(setIsDrawing);\n  };\n  const toggleEraserMode = () => {\n    setIsEraserMode(!isEraserMode);\n  };\n  const toggleClearCanvas = () => {\n    clearCanvas(canvasRef);\n  };\n  const saveCanvasDrawing = () => {\n    // Your code to capture and save the canvas drawing goes here\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const imageData = canvas.toDataURL(); // Get the base64 encoded image data\n    // Now, you can do whatever you want with the captured drawing data, e.g., send it to a server, save it in state, etc.\n    console.log('Drawing saved:', imageData);\n    setIsSaving(false); // Reset the saving state once the saving process is done\n  };\n\n  const dispatch = useDispatch();\n  const startGameHandler = () => {\n    // Add action dispatch below\n    dispatch(startMatch());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"canvas\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 800,\n      height: 600,\n      onMouseDown: handleMouseDown,\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp,\n      onMouseOut: handleMouseOut\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleEraserMode,\n        className: \"draw-erase\",\n        children: isEraserMode ? 'Draw' : 'Erase'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleClearCanvas,\n        className: \"Clear-canvas\",\n        children: \"Clear Drawing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), isSaving && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Saving your drawing...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/game\",\n        className: \"button-link\",\n        onClick: startGameHandler,\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(CanvasComponent, \"lU9LPuDP+i3527AwVuj6/wJmmdw=\", false, function () {\n  return [useDispatch];\n});\n_c = CanvasComponent;\nexport default CanvasComponent;\nvar _c;\n$RefreshReg$(_c, \"CanvasComponent\");","map":{"version":3,"names":["React","useRef","useState","useEffect","startDrawing","draw","stopDrawing","clearCanvas","Link","startMatch","useDispatch","jsxDEV","_jsxDEV","CanvasComponent","_s","canvasRef","isDrawing","setIsDrawing","isEraserMode","setIsEraserMode","lastX","setLastX","lastY","setLastY","isSaving","setIsSaving","saveTimeout","setSaveTimeout","clearTimeout","newSaveTimeout","setTimeout","saveCanvasDrawing","handleMouseDown","e","startTimer","handleMouseMove","current","handleMouseUp","handleMouseOut","toggleEraserMode","toggleClearCanvas","canvas","context","getContext","imageData","toDataURL","console","log","dispatch","startGameHandler","className","children","ref","width","height","onMouseDown","onMouseMove","onMouseUp","onMouseOut","fileName","_jsxFileName","lineNumber","columnNumber","onClick","to","_c","$RefreshReg$"],"sources":["/home/tome/lighthouse/projectG/projectg/src/pages/canvas/canvas.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport { startDrawing, draw, stopDrawing, clearCanvas } from './canvasUtils';\nimport { Link } from 'react-router-dom';\nimport { startMatch } from '../game/features/turns/turn';\nimport { useDispatch } from 'react-redux';\n\nconst CanvasComponent = () => {\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [isEraserMode, setIsEraserMode] = useState(false);\n  const [lastX, setLastX] = useState(0);\n  const [lastY, setLastY] = useState(0);\n  const [isSaving, setIsSaving] = useState(false);\n  const [saveTimeout, setSaveTimeout] = useState(null); // To store the save timer\n\n  useEffect(() => {\n    if (isSaving) {\n      // If saving is ongoing, clear the save timer and start a new one\n      if (saveTimeout) {\n        clearTimeout(saveTimeout);\n      }\n      const newSaveTimeout = setTimeout(saveCanvasDrawing, 15000);\n      setSaveTimeout(newSaveTimeout);\n    }\n  }, [isSaving]);\n\n  const handleMouseDown = (e) => {\n    startTimer()\n    startDrawing(isDrawing, setIsDrawing, setLastX, setLastY, e);\n    setIsSaving(true); // Start the saving process when the user starts drawing\n  };\n\n  const handleMouseMove = (e) => {\n    draw(isDrawing, isEraserMode, lastX, lastY, setLastX, setLastY, e, canvasRef.current);\n  };\n\n  const handleMouseUp = () => {\n    stopDrawing(setIsDrawing);\n  };\n\n  const handleMouseOut = () => {\n    stopDrawing(setIsDrawing);\n  };\n\n  const toggleEraserMode = () => {\n    setIsEraserMode(!isEraserMode);\n  };\n\n  const toggleClearCanvas = () => {\n    clearCanvas(canvasRef);\n  };\n\n  const saveCanvasDrawing = () => {\n    // Your code to capture and save the canvas drawing goes here\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const imageData = canvas.toDataURL(); // Get the base64 encoded image data\n    // Now, you can do whatever you want with the captured drawing data, e.g., send it to a server, save it in state, etc.\n    console.log('Drawing saved:', imageData);\n\n    setIsSaving(false); // Reset the saving state once the saving process is done\n  };\n\n  const dispatch = useDispatch();\n  const startGameHandler = () => {\n    // Add action dispatch below\n    dispatch(startMatch());\n  };\n\n  return (\n    <div className='canvas'>\n      <canvas\n        ref={canvasRef}\n        width={800}\n        height={600}\n        onMouseDown={handleMouseDown}\n        onMouseMove={handleMouseMove}\n        onMouseUp={handleMouseUp}\n        onMouseOut={handleMouseOut}\n      />\n      <div>\n        <button onClick={toggleEraserMode} className='draw-erase'>\n          {isEraserMode ? 'Draw' : 'Erase'}\n        </button>\n        <button onClick={toggleClearCanvas} className='Clear-canvas'>\n          Clear Drawing\n        </button>\n      </div>\n\n      {isSaving && <p>Saving your drawing...</p>}\n\n      <footer>\n        <Link to='/game' className='button-link' onClick={startGameHandler}>\n          <h2>Next</h2>\n        </Link>\n      </footer>\n    </div>\n  );\n};\n\nexport default CanvasComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}