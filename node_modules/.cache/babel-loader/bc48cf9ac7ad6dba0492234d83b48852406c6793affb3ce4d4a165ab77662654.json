{"ast":null,"code":"var _jsxFileName = \"/home/tome/lighthouse/projectG/projectg/src/pages/game/features/board/Board.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { CardRow } from './cardRow/CardRow.js';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectBoard, selectMatchedIDs } from './boardSlice.js';\nimport { matchOver, selectCurrentTurn, selectTeam1PlayerNames, selectTeam2PlayerNames } from '../turns/turn.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Board = () => {\n  _s();\n  const currentBoard = useSelector(selectBoard);\n  const matchedIDs = useSelector(selectMatchedIDs);\n  const turn = useSelector(selectCurrentTurn);\n  const numberOfCards = currentBoard.length;\n  const columns = 3;\n  const rows = Math.floor(numberOfCards / columns);\n  const dispatch = useDispatch();\n  const team1score = useSelector(state => state.team.team1Players.score);\n  const team2score = useSelector(state => state.team.team2Players.score);\n  const team1name = useSelector(selectTeam1PlayerNames);\n  const team2name = useSelector(selectTeam2PlayerNames);\n  useEffect(() => {\n    const matchIsOverHandler = () => {\n      dispatch(matchOver(team1name, team1score, team2name, team2score));\n    };\n    if (matchedIDs.length === 12 && turn > 0) {\n      matchIsOverHandler();\n      console.log(team1name, team1score, team2name, team2score);\n    }\n  }, [matchedIDs, dispatch, turn, team1name, team1score, team2name, team2score]);\n  const getRowCards = row => {\n    const rowCards = [];\n    for (let j = 0; j < columns; j++) {\n      const cardIndex = row * columns + j;\n      rowCards.push(currentBoard[cardIndex]);\n    }\n    return rowCards;\n  };\n  let content = [];\n  for (let row = 0; row < rows; row++) {\n    const rowCards = getRowCards(row);\n    content.push( /*#__PURE__*/_jsxDEV(CardRow, {\n      cards: rowCards\n    }, row, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cards-container\",\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 10\n  }, this);\n};\n_s(Board, \"5DW3W7eyi8OE8ovzNN2ewubTBpQ=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n_c = Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useEffect","CardRow","useSelector","useDispatch","selectBoard","selectMatchedIDs","matchOver","selectCurrentTurn","selectTeam1PlayerNames","selectTeam2PlayerNames","jsxDEV","_jsxDEV","Board","_s","currentBoard","matchedIDs","turn","numberOfCards","length","columns","rows","Math","floor","dispatch","team1score","state","team","team1Players","score","team2score","team2Players","team1name","team2name","matchIsOverHandler","console","log","getRowCards","row","rowCards","j","cardIndex","push","content","cards","fileName","_jsxFileName","lineNumber","columnNumber","className","children","_c","$RefreshReg$"],"sources":["/home/tome/lighthouse/projectG/projectg/src/pages/game/features/board/Board.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { CardRow } from './cardRow/CardRow.js';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectBoard, selectMatchedIDs } from './boardSlice.js';\nimport { matchOver, selectCurrentTurn, selectTeam1PlayerNames,selectTeam2PlayerNames} from '../turns/turn.js';\n\nexport const Board = () => {\n  const currentBoard = useSelector(selectBoard);\n  const matchedIDs = useSelector(selectMatchedIDs);\n  const turn = useSelector(selectCurrentTurn)\n  const numberOfCards = currentBoard.length;\n  const columns = 3;\n  const rows = Math.floor(numberOfCards / columns);\n  const dispatch = useDispatch();\n  const team1score = useSelector((state) => state.team.team1Players.score);\n  const team2score = useSelector((state) => state.team.team2Players.score);\n  const team1name = useSelector(selectTeam1PlayerNames);\n  const team2name = useSelector(selectTeam2PlayerNames);\n\n\n  useEffect(() => {\n\n  const matchIsOverHandler = () => {\n    dispatch(matchOver(team1name,team1score,team2name,team2score));\n  };\n      if (matchedIDs.length === 12 && turn>0) {\n        matchIsOverHandler();\n        console.log(team1name,team1score,team2name,team2score)\n      }\n  }, [matchedIDs,dispatch,turn,team1name,team1score,team2name,team2score]);\n\n  const getRowCards = (row) => {\n    const rowCards = [];\n    for (let j = 0; j < columns; j++) {\n      const cardIndex = row * columns + j;\n      rowCards.push(currentBoard[cardIndex]);\n    }\n    return rowCards;\n  };\n\n  let content = [];\n  for (let row = 0; row < rows; row++) {\n    const rowCards = getRowCards(row);\n    content.push(\n      <CardRow\n        key={row}\n        cards={rowCards}\n      />\n    );\n  }\n\n  return <div className=\"cards-container\">{content}</div>;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}