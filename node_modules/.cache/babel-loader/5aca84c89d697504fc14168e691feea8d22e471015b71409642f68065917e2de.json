{"ast":null,"code":"var _jsxFileName = \"/home/tome/lighthouse/projectG/projectg/src/pages/canvas/drawPrompt.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { chosenWords } from '../game/features/board/boardSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DisplayWordsComponent = () => {\n  _s();\n  const board = useSelector(state => state.board.displayState); // Assuming the board is stored in the 'board' slice of the state\n  const dispatch = useDispatch();\n  useEffect(() => {\n    // Dispatch the action to choose and display the words\n    dispatch(chosenWords());\n\n    // Clear the words after 15 seconds\n    const timer = setTimeout(() => {\n      dispatch(chosenWords([])); // Pass an empty array to clear the words\n    }, 15000);\n    return () => {\n      clearTimeout(timer); // Clean up the timer on component unmount\n    };\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Displaying Words:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: board.map(card => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: card.contents\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(DisplayWordsComponent, \"m/PqusNHQ81obf75UHlu2BvyGmc=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = DisplayWordsComponent;\nexport default DisplayWordsComponent;\nvar _c;\n$RefreshReg$(_c, \"DisplayWordsComponent\");","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","chosenWords","jsxDEV","_jsxDEV","DisplayWordsComponent","_s","board","state","displayState","dispatch","timer","setTimeout","clearTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","map","card","contents","id","_c","$RefreshReg$"],"sources":["/home/tome/lighthouse/projectG/projectg/src/pages/canvas/drawPrompt.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { chosenWords } from '../game/features/board/boardSlice';\n\nconst DisplayWordsComponent = () => {\n  const board = useSelector((state) => state.board.displayState); // Assuming the board is stored in the 'board' slice of the state\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    // Dispatch the action to choose and display the words\n    dispatch(chosenWords());\n\n    // Clear the words after 15 seconds\n    const timer = setTimeout(() => {\n      dispatch(chosenWords([])); // Pass an empty array to clear the words\n    }, 15000);\n\n    return () => {\n      clearTimeout(timer); // Clean up the timer on component unmount\n    };\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h2>Displaying Words:</h2>\n      <ul>\n        {board.map((card) => (\n          <li key={card.id}>{card.contents}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default DisplayWordsComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,WAAW,QAAQ,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAMC,KAAK,GAAGP,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACD,KAAK,CAACE,YAAY,CAAC,CAAC,CAAC;EAChE,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd;IACAW,QAAQ,CAACR,WAAW,CAAC,CAAC,CAAC;;IAEvB;IACA,MAAMS,KAAK,GAAGC,UAAU,CAAC,MAAM;MAC7BF,QAAQ,CAACR,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC,EAAE,KAAK,CAAC;IAET,OAAO,MAAM;MACXW,YAAY,CAACF,KAAK,CAAC,CAAC,CAAC;IACvB,CAAC;EACH,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;EAEd,oBACEN,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1Bd,OAAA;MAAAU,QAAA,EACGP,KAAK,CAACY,GAAG,CAAEC,IAAI,iBACdhB,OAAA;QAAAU,QAAA,EAAmBM,IAAI,CAACC;MAAQ,GAAvBD,IAAI,CAACE,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqB,CACtC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACZ,EAAA,CA5BID,qBAAqB;EAAA,QACXL,WAAW,EACRC,WAAW;AAAA;AAAAsB,EAAA,GAFxBlB,qBAAqB;AA8B3B,eAAeA,qBAAqB;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}