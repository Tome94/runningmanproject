{"ast":null,"code":"var _jsxFileName = \"/home/tome/lighthouse/projectG/projectg/src/pages/canvas/drawPrompt.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DrawPrompt = () => {\n  _s();\n  const board = useSelector(state => state.board); // Assuming the board is stored in the 'board' slice of the state\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [currentTeam, setCurrentTeam] = useState(1);\n  const currentTeamWordsRef = useRef(null);\n  useEffect(() => {\n    // Set the current team words once on component mount\n    currentTeamWordsRef.current = currentTeam === 1 ? board.filter((_, index) => index % 2 === 0) : board.filter((_, index) => index % 2 === 1);\n  }, [currentTeam, board]);\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentWordIndex(prevIndex => {\n        // Check if we have reached the last word of the current team\n        if (prevIndex === currentTeamWordsRef.current.length - 1) {\n          // If yes, switch to the next team and reset the word index\n          setCurrentTeam(prevTeam => prevTeam === 1 ? 2 : 1);\n          currentTeamWordsRef.current = currentTeam === 1 ? board.filter((_, index) => index % 2 === 1) : board.filter((_, index) => index % 2 === 0);\n          return 0;\n        } else {\n          // If not, increment the word index for the current team\n          return prevIndex + 1;\n        }\n      });\n    }, 5000);\n    return () => {\n      clearInterval(timer); // Clean up the timer on component unmount\n    };\n  }, [currentTeam, board]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Displaying Words:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), currentWordIndex < currentTeamWordsRef.current.length ?\n    /*#__PURE__*/\n    // Check if there are more words to display\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Team \", currentTeam, \" Words:\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: currentTeamWordsRef.current.map((card, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            display: index === currentWordIndex ? 'list-item' : 'none'\n          },\n          children: card.contents\n        }, card.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Game Finished!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(DrawPrompt, \"GLo3Dz5uwvy+gS5NsW84F/uLr+0=\", false, function () {\n  return [useSelector];\n});\n_c = DrawPrompt;\nexport default DrawPrompt;\nvar _c;\n$RefreshReg$(_c, \"DrawPrompt\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useSelector","jsxDEV","_jsxDEV","Fragment","_Fragment","DrawPrompt","_s","board","state","currentWordIndex","setCurrentWordIndex","currentTeam","setCurrentTeam","currentTeamWordsRef","current","filter","_","index","timer","setInterval","prevIndex","length","prevTeam","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","map","card","style","display","contents","id","_c","$RefreshReg$"],"sources":["/home/tome/lighthouse/projectG/projectg/src/pages/canvas/drawPrompt.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\n\nconst DrawPrompt = () => {\n  const board = useSelector((state) => state.board); // Assuming the board is stored in the 'board' slice of the state\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [currentTeam, setCurrentTeam] = useState(1);\n  const currentTeamWordsRef = useRef(null);\n\n  useEffect(() => {\n    // Set the current team words once on component mount\n    currentTeamWordsRef.current =\n      currentTeam === 1\n        ? board.filter((_, index) => index % 2 === 0)\n        : board.filter((_, index) => index % 2 === 1);\n  }, [currentTeam, board]);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentWordIndex((prevIndex) => {\n        // Check if we have reached the last word of the current team\n        if (prevIndex === currentTeamWordsRef.current.length - 1) {\n          // If yes, switch to the next team and reset the word index\n          setCurrentTeam((prevTeam) => (prevTeam === 1 ? 2 : 1));\n          currentTeamWordsRef.current =\n            currentTeam === 1\n              ? board.filter((_, index) => index % 2 === 1)\n              : board.filter((_, index) => index % 2 === 0);\n          return 0;\n        } else {\n          // If not, increment the word index for the current team\n          return prevIndex + 1;\n        }\n      });\n    }, 5000);\n\n    return () => {\n      clearInterval(timer); // Clean up the timer on component unmount\n    };\n  }, [currentTeam, board]);\n\n  return (\n    <div>\n      <h2>Displaying Words:</h2>\n      {currentWordIndex < currentTeamWordsRef.current.length ? ( // Check if there are more words to display\n        <>\n          <h3>Team {currentTeam} Words:</h3>\n          <ul>\n            {currentTeamWordsRef.current.map((card, index) => (\n              <li key={card.id} style={{ display: index === currentWordIndex ? 'list-item' : 'none' }}>\n                {card.contents}\n              </li>\n            ))}\n          </ul>\n        </>\n      ) : (\n        <p>Game Finished!</p>\n      )}\n    </div>\n  );\n};\n\nexport default DrawPrompt;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}