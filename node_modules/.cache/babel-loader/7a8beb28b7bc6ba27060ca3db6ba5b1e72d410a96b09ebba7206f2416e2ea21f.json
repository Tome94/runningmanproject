{"ast":null,"code":"var _jsxFileName = \"/home/tome/lighthouse/projectG/projectg/src/pages/game/features/board/cardRow/card/Card.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\n// Add import statements below\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectVisibleIDs, flipCard, selectMatchedIDs } from '../../boardSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet cardLogo = \"https://static-assets.codecademy.com/Courses/Learn-Redux/matching-game/codecademy_logo.png\";\nexport const Card = _ref => {\n  _s();\n  let {\n    id,\n    contents\n  } = _ref;\n  // Add selected data and dispatch variables below\n  const visibleIDs = useSelector(selectVisibleIDs);\n  const matchedIDs = useSelector(selectMatchedIDs);\n  const dispatch = useDispatch();\n  // flip card action\n  const flipHandler = id => {\n    // Add action dispatch below\n    dispatch(flipCard(id));\n  };\n  let cardStyle = 'resting';\n  let click = () => flipHandler(id);\n  let cardText = /*#__PURE__*/_jsxDEV(\"img\", {\n    src: cardLogo,\n    className: \"logo-placeholder\",\n    alt: \"Card option\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n\n  // 1st if statement\n  // implement card id array membership check\n  if (visibleIDs.includes(id) || matchedIDs.includes(id)) {\n    cardText = contents;\n    click = () => {};\n  }\n\n  // 2nd if statement\n  // implement card id array membership check\n  if (matchedIDs.includes(id)) {\n    cardStyle = 'matched';\n  }\n\n  // 3rd if statement\n  // implement number of flipped cards check\n  if (visibleIDs.length === 2) {\n    click = () => {};\n  }\n  if (visibleIDs.length >= 2 || matchedIDs.includes(id)) {\n    cardStyle = 'no-match';\n  }\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: click,\n    className: `card ${cardStyle}`,\n    children: cardText\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Card, \"Z+nlmlTRvPuItvOdwPXN5iC0nE0=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useSelector","useDispatch","selectVisibleIDs","flipCard","selectMatchedIDs","jsxDEV","_jsxDEV","cardLogo","Card","_ref","_s","id","contents","visibleIDs","matchedIDs","dispatch","flipHandler","cardStyle","click","cardText","src","className","alt","fileName","_jsxFileName","lineNumber","columnNumber","includes","length","onClick","children","_c","$RefreshReg$"],"sources":["/home/tome/lighthouse/projectG/projectg/src/pages/game/features/board/cardRow/card/Card.js"],"sourcesContent":["import React from 'react';\n// Add import statements below\nimport {useSelector, useDispatch} from 'react-redux'\nimport {selectVisibleIDs, flipCard, selectMatchedIDs} from '../../boardSlice'\n\nlet cardLogo = \"https://static-assets.codecademy.com/Courses/Learn-Redux/matching-game/codecademy_logo.png\";\n\nexport const Card = ({ id, contents }) => {\n  // Add selected data and dispatch variables below\n  const visibleIDs = useSelector(selectVisibleIDs)\n  const matchedIDs = useSelector(selectMatchedIDs)\n  const dispatch = useDispatch()\n  // flip card action\n  const flipHandler = (id) => {\n    // Add action dispatch below\n    dispatch(flipCard(id))\n  };\n\n  let cardStyle = 'resting'\n  let click = () => flipHandler(id);\n  \n  let cardText = (\n    <img src={cardLogo} className=\"logo-placeholder\" alt=\"Card option\" />\n  );\n\n  // 1st if statement\n  // implement card id array membership check\n  if (visibleIDs.includes(id) || matchedIDs.includes(id)) {\n    cardText = contents;\n    click = () => {};\n  }\n\n  // 2nd if statement\n  // implement card id array membership check\n  if (matchedIDs.includes(id)) {\n    cardStyle = 'matched';\n  }\n\n  // 3rd if statement\n  // implement number of flipped cards check\n  if (visibleIDs.length === 2) {\n    click = () => {};\n  }\n  if (visibleIDs.length >= 2 || matchedIDs.includes(id)){\n    cardStyle = 'no-match'\n  }\n  return (\n    <button onClick={click} className={`card ${cardStyle}`}>\n      {cardText}\n    </button>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,SAAQC,WAAW,EAAEC,WAAW,QAAO,aAAa;AACpD,SAAQC,gBAAgB,EAAEC,QAAQ,EAAEC,gBAAgB,QAAO,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7E,IAAIC,QAAQ,GAAG,4FAA4F;AAE3G,OAAO,MAAMC,IAAI,GAAGC,IAAA,IAAsB;EAAAC,EAAA;EAAA,IAArB;IAAEC,EAAE;IAAEC;EAAS,CAAC,GAAAH,IAAA;EACnC;EACA,MAAMI,UAAU,GAAGb,WAAW,CAACE,gBAAgB,CAAC;EAChD,MAAMY,UAAU,GAAGd,WAAW,CAACI,gBAAgB,CAAC;EAChD,MAAMW,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAC9B;EACA,MAAMe,WAAW,GAAIL,EAAE,IAAK;IAC1B;IACAI,QAAQ,CAACZ,QAAQ,CAACQ,EAAE,CAAC,CAAC;EACxB,CAAC;EAED,IAAIM,SAAS,GAAG,SAAS;EACzB,IAAIC,KAAK,GAAGA,CAAA,KAAMF,WAAW,CAACL,EAAE,CAAC;EAEjC,IAAIQ,QAAQ,gBACVb,OAAA;IAAKc,GAAG,EAAEb,QAAS;IAACc,SAAS,EAAC,kBAAkB;IAACC,GAAG,EAAC;EAAa;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CACrE;;EAED;EACA;EACA,IAAIb,UAAU,CAACc,QAAQ,CAAChB,EAAE,CAAC,IAAIG,UAAU,CAACa,QAAQ,CAAChB,EAAE,CAAC,EAAE;IACtDQ,QAAQ,GAAGP,QAAQ;IACnBM,KAAK,GAAGA,CAAA,KAAM,CAAC,CAAC;EAClB;;EAEA;EACA;EACA,IAAIJ,UAAU,CAACa,QAAQ,CAAChB,EAAE,CAAC,EAAE;IAC3BM,SAAS,GAAG,SAAS;EACvB;;EAEA;EACA;EACA,IAAIJ,UAAU,CAACe,MAAM,KAAK,CAAC,EAAE;IAC3BV,KAAK,GAAGA,CAAA,KAAM,CAAC,CAAC;EAClB;EACA,IAAIL,UAAU,CAACe,MAAM,IAAI,CAAC,IAAId,UAAU,CAACa,QAAQ,CAAChB,EAAE,CAAC,EAAC;IACpDM,SAAS,GAAG,UAAU;EACxB;EACA,oBACEX,OAAA;IAAQuB,OAAO,EAAEX,KAAM;IAACG,SAAS,EAAG,QAAOJ,SAAU,EAAE;IAAAa,QAAA,EACpDX;EAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb,CAAC;AAAChB,EAAA,CA5CWF,IAAI;EAAA,QAEIR,WAAW,EACXA,WAAW,EACbC,WAAW;AAAA;AAAA8B,EAAA,GAJjBvB,IAAI;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}