{"ast":null,"code":"var _jsxFileName = \"/home/tome/lighthouse/projectG/projectg/src/pages/game/features/score/Score.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\n// Add import statement below\nimport { useSelector } from \"react-redux\";\nimport { selectTeamOneMatchIds, selectTeamTwoMatchIds } from \"../board/boardSlice\";\nimport { selectCurrentTurn } from \"../turns/turn\";\nimport { updateTeamScore } from \"../../../local/Actions\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Score = () => {\n  _s();\n  // Add selected data variable below\n  const teamOneCardsMatched = useSelector(selectTeamOneMatchIds);\n  const teamtwoCardsMatched = useSelector(selectTeamTwoMatchIds);\n  const teamID = useSelector(selectCurrentTurn);\n  const team1score = useSelector(state => state.team.team1Players.score);\n  const team2score = useSelector(state => state.team.team2Players.score);\n  const isMatchOver = useSelector(state => state.turn.isMatchOver);\n  const winner = useSelector(state => state.turn.winner);\n  const dispatch = useDispatch();\n\n  // Update team score when cardsMatched count increases\n  React.useEffect(() => {\n    if (teamID === 1) {\n      const newScore = teamOneCardsMatched.length;\n      dispatch(updateTeamScore(teamID, newScore));\n    } else {\n      const newScore = teamtwoCardsMatched.length;\n      dispatch(updateTeamScore(teamID, newScore));\n    }\n  }, [teamOneCardsMatched.length, teamtwoCardsMatched.length, dispatch, teamID]);\n  const [currentTeamID, setCurrentTeamID] = React.useState(teamID);\n\n  //found out if match is over the update the scoreboard\n  const team1name = useSelector(state => state.team.team1Players[0].name);\n  const team2name = useSelector(state => state.team.team2Players[0].name);\n  useEffect(() => {\n    const matchIsOverHandler = () => {\n      dispatch(matchOver(team1name, team1score, team2name, team2score));\n    };\n    if (matchedIDs.length === 12 && turn > 0) {\n      matchIsOverHandler();\n      console.log(team1name, team1score, team2name, team2score);\n    }\n  }, [matchedIDs, dispatch, turn, team1name, team1score, team2name, team2score]);\n\n  // Delay the update of currentTeamID by 2 seconds\n  React.useEffect(() => {\n    const timer = setTimeout(() => {\n      setCurrentTeamID(teamID);\n    }, 2000);\n    return () => clearTimeout(timer);\n  }, [teamID]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"score-board\",\n    children: isMatchOver ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Match Result:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), winner]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), currentTeamID === 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Turn: Team 1 || Score: \", team1score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), currentTeamID === 2 && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Turn: Team 2 || Score: \", team2score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Score, \"d77jqi5YciA1hQACzpDkZeGDYVc=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useDispatch, useSelector, useSelector];\n});\n_c = Score;\nvar _c;\n$RefreshReg$(_c, \"Score\");","map":{"version":3,"names":["React","useSelector","selectTeamOneMatchIds","selectTeamTwoMatchIds","selectCurrentTurn","updateTeamScore","useDispatch","jsxDEV","_jsxDEV","Score","_s","teamOneCardsMatched","teamtwoCardsMatched","teamID","team1score","state","team","team1Players","score","team2score","team2Players","isMatchOver","turn","winner","dispatch","useEffect","newScore","length","currentTeamID","setCurrentTeamID","useState","team1name","name","team2name","matchIsOverHandler","matchOver","matchedIDs","console","log","timer","setTimeout","clearTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/tome/lighthouse/projectG/projectg/src/pages/game/features/score/Score.js"],"sourcesContent":["import React from \"react\";\n// Add import statement below\nimport { useSelector } from \"react-redux\";\nimport {\n  selectTeamOneMatchIds,\n  selectTeamTwoMatchIds,\n} from \"../board/boardSlice\";\nimport { selectCurrentTurn } from \"../turns/turn\";\nimport { updateTeamScore } from \"../../../local/Actions\";\nimport { useDispatch } from \"react-redux\";\n\nexport const Score = () => {\n  // Add selected data variable below\n  const teamOneCardsMatched = useSelector(selectTeamOneMatchIds);\n  const teamtwoCardsMatched = useSelector(selectTeamTwoMatchIds);\n  const teamID = useSelector(selectCurrentTurn);\n  const team1score = useSelector((state) => state.team.team1Players.score);\n  const team2score = useSelector((state) => state.team.team2Players.score);\n  const isMatchOver = useSelector((state) => state.turn.isMatchOver);\n  const winner = useSelector((state) => state.turn.winner)\n  const dispatch = useDispatch();\n\n  // Update team score when cardsMatched count increases\n  React.useEffect(() => {\n    if (teamID === 1) {\n      const newScore = teamOneCardsMatched.length;\n      dispatch(updateTeamScore(teamID, newScore));\n    } else {\n      const newScore = teamtwoCardsMatched.length;\n      dispatch(updateTeamScore(teamID, newScore));\n    }\n  }, [teamOneCardsMatched.length, teamtwoCardsMatched.length, dispatch, teamID]);\n\n  const [currentTeamID, setCurrentTeamID] = React.useState(teamID);\n\n  //found out if match is over the update the scoreboard\n  const team1name = useSelector((state) => state.team.team1Players[0].name);\n  const team2name = useSelector((state) => state.team.team2Players[0].name);\n  useEffect(() => {\n\n  const matchIsOverHandler = () => {\n    dispatch(matchOver(team1name,team1score,team2name,team2score));\n  };\n      if (matchedIDs.length === 12 && turn>0) {\n        matchIsOverHandler();\n        console.log(team1name,team1score,team2name,team2score)\n      }\n  }, [matchedIDs,dispatch,turn,team1name,team1score,team2name,team2score]);\n\n  // Delay the update of currentTeamID by 2 seconds\n  React.useEffect(() => {\n    const timer = setTimeout(() => {\n      setCurrentTeamID(teamID);\n    }, 2000);\n\n    return () => clearTimeout(timer);\n  }, [teamID]);\n\n  return (\n    <div className=\"score-board\">\n      {isMatchOver ? (\n        <div className=\"result\">\n          <h2>Match Result:</h2>\n          {winner}\n        </div>\n      ) : (\n        <div className=\"score-container\">\n          <br />\n          {currentTeamID === 1 && (\n            <span>Turn: Team 1 || Score: {team1score}</span>\n          )}\n          {currentTeamID === 2 && (\n            <span>Turn: Team 2 || Score: {team2score}</span>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,SAASC,WAAW,QAAQ,aAAa;AACzC,SACEC,qBAAqB,EACrBC,qBAAqB,QAChB,qBAAqB;AAC5B,SAASC,iBAAiB,QAAQ,eAAe;AACjD,SAASC,eAAe,QAAQ,wBAAwB;AACxD,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,OAAO,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB;EACA,MAAMC,mBAAmB,GAAGV,WAAW,CAACC,qBAAqB,CAAC;EAC9D,MAAMU,mBAAmB,GAAGX,WAAW,CAACE,qBAAqB,CAAC;EAC9D,MAAMU,MAAM,GAAGZ,WAAW,CAACG,iBAAiB,CAAC;EAC7C,MAAMU,UAAU,GAAGb,WAAW,CAAEc,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACC,YAAY,CAACC,KAAK,CAAC;EACxE,MAAMC,UAAU,GAAGlB,WAAW,CAAEc,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACI,YAAY,CAACF,KAAK,CAAC;EACxE,MAAMG,WAAW,GAAGpB,WAAW,CAAEc,KAAK,IAAKA,KAAK,CAACO,IAAI,CAACD,WAAW,CAAC;EAClE,MAAME,MAAM,GAAGtB,WAAW,CAAEc,KAAK,IAAKA,KAAK,CAACO,IAAI,CAACC,MAAM,CAAC;EACxD,MAAMC,QAAQ,GAAGlB,WAAW,CAAC,CAAC;;EAE9B;EACAN,KAAK,CAACyB,SAAS,CAAC,MAAM;IACpB,IAAIZ,MAAM,KAAK,CAAC,EAAE;MAChB,MAAMa,QAAQ,GAAGf,mBAAmB,CAACgB,MAAM;MAC3CH,QAAQ,CAACnB,eAAe,CAACQ,MAAM,EAAEa,QAAQ,CAAC,CAAC;IAC7C,CAAC,MAAM;MACL,MAAMA,QAAQ,GAAGd,mBAAmB,CAACe,MAAM;MAC3CH,QAAQ,CAACnB,eAAe,CAACQ,MAAM,EAAEa,QAAQ,CAAC,CAAC;IAC7C;EACF,CAAC,EAAE,CAACf,mBAAmB,CAACgB,MAAM,EAAEf,mBAAmB,CAACe,MAAM,EAAEH,QAAQ,EAAEX,MAAM,CAAC,CAAC;EAE9E,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAG7B,KAAK,CAAC8B,QAAQ,CAACjB,MAAM,CAAC;;EAEhE;EACA,MAAMkB,SAAS,GAAG9B,WAAW,CAAEc,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACC,YAAY,CAAC,CAAC,CAAC,CAACe,IAAI,CAAC;EACzE,MAAMC,SAAS,GAAGhC,WAAW,CAAEc,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACI,YAAY,CAAC,CAAC,CAAC,CAACY,IAAI,CAAC;EACzEP,SAAS,CAAC,MAAM;IAEhB,MAAMS,kBAAkB,GAAGA,CAAA,KAAM;MAC/BV,QAAQ,CAACW,SAAS,CAACJ,SAAS,EAACjB,UAAU,EAACmB,SAAS,EAACd,UAAU,CAAC,CAAC;IAChE,CAAC;IACG,IAAIiB,UAAU,CAACT,MAAM,KAAK,EAAE,IAAIL,IAAI,GAAC,CAAC,EAAE;MACtCY,kBAAkB,CAAC,CAAC;MACpBG,OAAO,CAACC,GAAG,CAACP,SAAS,EAACjB,UAAU,EAACmB,SAAS,EAACd,UAAU,CAAC;IACxD;EACJ,CAAC,EAAE,CAACiB,UAAU,EAACZ,QAAQ,EAACF,IAAI,EAACS,SAAS,EAACjB,UAAU,EAACmB,SAAS,EAACd,UAAU,CAAC,CAAC;;EAExE;EACAnB,KAAK,CAACyB,SAAS,CAAC,MAAM;IACpB,MAAMc,KAAK,GAAGC,UAAU,CAAC,MAAM;MAC7BX,gBAAgB,CAAChB,MAAM,CAAC;IAC1B,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAM4B,YAAY,CAACF,KAAK,CAAC;EAClC,CAAC,EAAE,CAAC1B,MAAM,CAAC,CAAC;EAEZ,oBACEL,OAAA;IAAKkC,SAAS,EAAC,aAAa;IAAAC,QAAA,EACzBtB,WAAW,gBACVb,OAAA;MAAKkC,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrBnC,OAAA;QAAAmC,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACrBxB,MAAM;IAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,gBAENvC,OAAA;MAAKkC,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BnC,OAAA;QAAAoC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACLnB,aAAa,KAAK,CAAC,iBAClBpB,OAAA;QAAAmC,QAAA,GAAM,yBAAuB,EAAC7B,UAAU;MAAA;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAChD,EACAnB,aAAa,KAAK,CAAC,iBAClBpB,OAAA;QAAAmC,QAAA,GAAM,yBAAuB,EAACxB,UAAU;MAAA;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAChD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACrC,EAAA,CAnEWD,KAAK;EAAA,QAEYR,WAAW,EACXA,WAAW,EACxBA,WAAW,EACPA,WAAW,EACXA,WAAW,EACVA,WAAW,EAChBA,WAAW,EACTK,WAAW,EAgBVL,WAAW,EACXA,WAAW;AAAA;AAAA+C,EAAA,GA1BlBvC,KAAK;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}