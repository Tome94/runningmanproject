{"ast":null,"code":"import { generateId } from './utilities';\nconst initialState = {\n  team1Players: [{\n    id: generateId(),\n    name: 'Tommy',\n    score: 0\n  }],\n  team2Players: [{\n    id: generateId(),\n    name: 'John',\n    score: 0\n  }]\n};\nexport const teamReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'ADD_PLAYER':\n      let {\n        player,\n        team\n      } = action.payload;\n      if (team === 1) {\n        return {\n          ...state,\n          team1Players: [player, ...state.team1Players]\n        };\n      } else if (team === 2) {\n        return {\n          ...state,\n          team2Players: [player, ...state.team2Players]\n        };\n      }\n      break;\n    case 'REMOVE_PLAYER':\n      let {\n        playerIdToRemove,\n        teamNumber\n      } = action.payload;\n      if (teamNumber === 1) {\n        return {\n          ...state,\n          team1Players: state.team1Players.filter(player => player.id !== playerIdToRemove)\n        };\n      } else if (teamNumber === 2) {\n        return {\n          ...state,\n          team2Players: state.team2Players.filter(player => player.id !== playerIdToRemove)\n        };\n      }\n      break;\n    case 'UPDATE_TEAM_SCORE':\n      const {\n        teamID,\n        newScore\n      } = action.payload;\n      return {\n        ...state,\n        [`team${teamID}Players`]: {\n          ...state[`team${teamID}Players`],\n          score: newScore\n        }\n      };\n    default:\n      return state;\n  }\n  const selectTeam1PlayerNames = state => state.team.team1Players.map(player => player.name);\n  const selectTeam2PlayerNames = state => state.team.team2Players.map(player => player.name);\n};","map":{"version":3,"names":["generateId","initialState","team1Players","id","name","score","team2Players","teamReducer","state","arguments","length","undefined","action","type","player","team","payload","playerIdToRemove","teamNumber","filter","teamID","newScore","selectTeam1PlayerNames","map","selectTeam2PlayerNames"],"sources":["/home/tome/lighthouse/projectG/projectg/src/pages/local/teamReducer.js"],"sourcesContent":["import { generateId } from './utilities';\n\nconst initialState = {\n  team1Players: [\n    {\n      id: generateId(),\n      name: 'Tommy',\n      score: 0\n    },\n  ],\n  team2Players: [\n    {\n      id: generateId(),\n      name: 'John',\n      score: 0\n    },\n  ],\n};\n\nexport const teamReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADD_PLAYER':\n      let { player, team} = action.payload;\n      if (team === 1) {\n        return {\n          ...state,\n          team1Players: [player, ...state.team1Players],\n        };\n      } else if (team === 2) {\n        return {\n          ...state,\n          team2Players: [player, ...state.team2Players],\n        };\n      }\n      break;\n    case 'REMOVE_PLAYER':\n      let { playerIdToRemove, teamNumber } = action.payload;\n      if (teamNumber === 1) {\n        return {\n          ...state,\n          team1Players: state.team1Players.filter(\n            (player) => player.id !== playerIdToRemove\n          ),\n        };\n      } else if (teamNumber === 2) {\n        return {\n          ...state,\n          team2Players: state.team2Players.filter(\n            (player) => player.id !== playerIdToRemove\n          ),\n        };\n      }\n      break;\n      case 'UPDATE_TEAM_SCORE':\n        const { teamID, newScore } = action.payload;\n        return {\n          ...state,\n          [`team${teamID}Players`]: {\n            ...state[`team${teamID}Players`],\n            score: newScore,\n          },\n        };\n    default:\n      return state;\n  }\n  const selectTeam1PlayerNames = (state) =>\n  state.team.team1Players.map((player) => player.name);\n  const selectTeam2PlayerNames = (state) =>\n  state.team.team2Players.map((player) => player.name);\n\n};\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,aAAa;AAExC,MAAMC,YAAY,GAAG;EACnBC,YAAY,EAAE,CACZ;IACEC,EAAE,EAAEH,UAAU,CAAC,CAAC;IAChBI,IAAI,EAAE,OAAO;IACbC,KAAK,EAAE;EACT,CAAC,CACF;EACDC,YAAY,EAAE,CACZ;IACEH,EAAE,EAAEH,UAAU,CAAC,CAAC;IAChBI,IAAI,EAAE,MAAM;IACZC,KAAK,EAAE;EACT,CAAC;AAEL,CAAC;AAED,OAAO,MAAME,WAAW,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGR,YAAY;EAAA,IAAEW,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACtD,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAK,YAAY;MACf,IAAI;QAAEC,MAAM;QAAEC;MAAI,CAAC,GAAGH,MAAM,CAACI,OAAO;MACpC,IAAID,IAAI,KAAK,CAAC,EAAE;QACd,OAAO;UACL,GAAGP,KAAK;UACRN,YAAY,EAAE,CAACY,MAAM,EAAE,GAAGN,KAAK,CAACN,YAAY;QAC9C,CAAC;MACH,CAAC,MAAM,IAAIa,IAAI,KAAK,CAAC,EAAE;QACrB,OAAO;UACL,GAAGP,KAAK;UACRF,YAAY,EAAE,CAACQ,MAAM,EAAE,GAAGN,KAAK,CAACF,YAAY;QAC9C,CAAC;MACH;MACA;IACF,KAAK,eAAe;MAClB,IAAI;QAAEW,gBAAgB;QAAEC;MAAW,CAAC,GAAGN,MAAM,CAACI,OAAO;MACrD,IAAIE,UAAU,KAAK,CAAC,EAAE;QACpB,OAAO;UACL,GAAGV,KAAK;UACRN,YAAY,EAAEM,KAAK,CAACN,YAAY,CAACiB,MAAM,CACpCL,MAAM,IAAKA,MAAM,CAACX,EAAE,KAAKc,gBAC5B;QACF,CAAC;MACH,CAAC,MAAM,IAAIC,UAAU,KAAK,CAAC,EAAE;QAC3B,OAAO;UACL,GAAGV,KAAK;UACRF,YAAY,EAAEE,KAAK,CAACF,YAAY,CAACa,MAAM,CACpCL,MAAM,IAAKA,MAAM,CAACX,EAAE,KAAKc,gBAC5B;QACF,CAAC;MACH;MACA;IACA,KAAK,mBAAmB;MACtB,MAAM;QAAEG,MAAM;QAAEC;MAAS,CAAC,GAAGT,MAAM,CAACI,OAAO;MAC3C,OAAO;QACL,GAAGR,KAAK;QACR,CAAE,OAAMY,MAAO,SAAQ,GAAG;UACxB,GAAGZ,KAAK,CAAE,OAAMY,MAAO,SAAQ,CAAC;UAChCf,KAAK,EAAEgB;QACT;MACF,CAAC;IACL;MACE,OAAOb,KAAK;EAChB;EACA,MAAMc,sBAAsB,GAAId,KAAK,IACrCA,KAAK,CAACO,IAAI,CAACb,YAAY,CAACqB,GAAG,CAAET,MAAM,IAAKA,MAAM,CAACV,IAAI,CAAC;EACpD,MAAMoB,sBAAsB,GAAIhB,KAAK,IACrCA,KAAK,CAACO,IAAI,CAACT,YAAY,CAACiB,GAAG,CAAET,MAAM,IAAKA,MAAM,CAACV,IAAI,CAAC;AAEtD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}