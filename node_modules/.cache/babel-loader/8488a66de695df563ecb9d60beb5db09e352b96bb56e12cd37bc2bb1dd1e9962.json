{"ast":null,"code":"var _jsxFileName = \"/home/tome/lighthouse/projectG/projectg/src/pages/game/features/board/Board.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { CardRow } from './cardRow/CardRow.js';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectBoard, selectMatchedIDs } from './boardSlice.js';\nimport { matchOver } from '../turns/turn.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Board = () => {\n  _s();\n  const currentBoard = useSelector(selectBoard);\n  const matchedIDs = useSelector(selectMatchedIDs);\n  const numberOfCards = currentBoard.length;\n  const columns = 3;\n  const rows = Math.floor(numberOfCards / columns);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const matchIsOverHandler = () => {\n      dispatch(matchOver());\n    };\n    const handleMatchOver = () => {\n      if (matchedIDs.length === 12) {\n        matchIsOverHandler();\n      }\n    };\n    handleMatchOver();\n  }, [matchedIDs, matchIsOverHandler]);\n  const getRowCards = row => {\n    const rowCards = [];\n    for (let j = 0; j < columns; j++) {\n      const cardIndex = row * columns + j;\n      rowCards.push(currentBoard[cardIndex]);\n    }\n    return rowCards;\n  };\n  let content = [];\n  for (let row = 0; row < rows; row++) {\n    const rowCards = getRowCards(row);\n    content.push( /*#__PURE__*/_jsxDEV(CardRow, {\n      cards: rowCards\n    }, row, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cards-container\",\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 10\n  }, this);\n};\n_s(Board, \"n0ffgt4bi/UVvuZosgJJ7oenepc=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useEffect","CardRow","useSelector","useDispatch","selectBoard","selectMatchedIDs","matchOver","jsxDEV","_jsxDEV","Board","_s","currentBoard","matchedIDs","numberOfCards","length","columns","rows","Math","floor","dispatch","matchIsOverHandler","handleMatchOver","getRowCards","row","rowCards","j","cardIndex","push","content","cards","fileName","_jsxFileName","lineNumber","columnNumber","className","children","_c","$RefreshReg$"],"sources":["/home/tome/lighthouse/projectG/projectg/src/pages/game/features/board/Board.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { CardRow } from './cardRow/CardRow.js';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectBoard, selectMatchedIDs } from './boardSlice.js';\nimport { matchOver } from '../turns/turn.js';\n\nexport const Board = () => {\n  const currentBoard = useSelector(selectBoard);\n  const matchedIDs = useSelector(selectMatchedIDs);\n  const numberOfCards = currentBoard.length;\n  const columns = 3;\n  const rows = Math.floor(numberOfCards / columns);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n\n  const matchIsOverHandler = () => {\n    dispatch(matchOver());\n  };\n\n    const handleMatchOver = () => {\n      if (matchedIDs.length === 12) {\n        matchIsOverHandler();\n      }\n    };\n\n    handleMatchOver();\n  }, [matchedIDs, matchIsOverHandler]);\n\n  const getRowCards = (row) => {\n    const rowCards = [];\n    for (let j = 0; j < columns; j++) {\n      const cardIndex = row * columns + j;\n      rowCards.push(currentBoard[cardIndex]);\n    }\n    return rowCards;\n  };\n\n  let content = [];\n  for (let row = 0; row < rows; row++) {\n    const rowCards = getRowCards(row);\n    content.push(\n      <CardRow\n        key={row}\n        cards={rowCards}\n      />\n    );\n  }\n\n  return <div className=\"cards-container\">{content}</div>;\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,OAAO,QAAQ,sBAAsB;AAC9C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,WAAW,EAAEC,gBAAgB,QAAQ,iBAAiB;AAC/D,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,OAAO,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,YAAY,GAAGT,WAAW,CAACE,WAAW,CAAC;EAC7C,MAAMQ,UAAU,GAAGV,WAAW,CAACG,gBAAgB,CAAC;EAChD,MAAMQ,aAAa,GAAGF,YAAY,CAACG,MAAM;EACzC,MAAMC,OAAO,GAAG,CAAC;EACjB,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACL,aAAa,GAAGE,OAAO,CAAC;EAChD,MAAMI,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAE9BH,SAAS,CAAC,MAAM;IAEhB,MAAMoB,kBAAkB,GAAGA,CAAA,KAAM;MAC/BD,QAAQ,CAACb,SAAS,CAAC,CAAC,CAAC;IACvB,CAAC;IAEC,MAAMe,eAAe,GAAGA,CAAA,KAAM;MAC5B,IAAIT,UAAU,CAACE,MAAM,KAAK,EAAE,EAAE;QAC5BM,kBAAkB,CAAC,CAAC;MACtB;IACF,CAAC;IAEDC,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,CAACT,UAAU,EAAEQ,kBAAkB,CAAC,CAAC;EAEpC,MAAME,WAAW,GAAIC,GAAG,IAAK;IAC3B,MAAMC,QAAQ,GAAG,EAAE;IACnB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,OAAO,EAAEU,CAAC,EAAE,EAAE;MAChC,MAAMC,SAAS,GAAGH,GAAG,GAAGR,OAAO,GAAGU,CAAC;MACnCD,QAAQ,CAACG,IAAI,CAAChB,YAAY,CAACe,SAAS,CAAC,CAAC;IACxC;IACA,OAAOF,QAAQ;EACjB,CAAC;EAED,IAAII,OAAO,GAAG,EAAE;EAChB,KAAK,IAAIL,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGP,IAAI,EAAEO,GAAG,EAAE,EAAE;IACnC,MAAMC,QAAQ,GAAGF,WAAW,CAACC,GAAG,CAAC;IACjCK,OAAO,CAACD,IAAI,eACVnB,OAAA,CAACP,OAAO;MAEN4B,KAAK,EAAEL;IAAS,GADXD,GAAG;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAET,CACH,CAAC;EACH;EAEA,oBAAOzB,OAAA;IAAK0B,SAAS,EAAC,iBAAiB;IAAAC,QAAA,EAAEP;EAAO;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACzD,CAAC;AAACvB,EAAA,CA5CWD,KAAK;EAAA,QACKP,WAAW,EACbA,WAAW,EAIbC,WAAW;AAAA;AAAAiC,EAAA,GANjB3B,KAAK;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}