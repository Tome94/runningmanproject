{"ast":null,"code":"// canvasDrawingsSlice.js\nimport{createSlice}from'@reduxjs/toolkit';export var canvasDrawingsSlice=createSlice({name:'canvasDrawings',initialState:[],reducers:{addCanvasDrawing:function addCanvasDrawing(state,action){state.push(action.payload);console.log('Drawing saved:');},clearCanvasDrawings:function clearCanvasDrawings(state){return[];}}});var _canvasDrawingsSlice$=canvasDrawingsSlice.actions,addCanvasDrawing=_canvasDrawingsSlice$.addCanvasDrawing,clearCanvasDrawings=_canvasDrawingsSlice$.clearCanvasDrawings;export{addCanvasDrawing,clearCanvasDrawings};export default canvasDrawingsSlice.reducer;","map":{"version":3,"names":["createSlice","canvasDrawingsSlice","name","initialState","reducers","addCanvasDrawing","state","action","push","payload","console","log","clearCanvasDrawings","_canvasDrawingsSlice$","actions","reducer"],"sources":["/home/tome/lighthouse/projectG/src/pages/canvas/canvasDrawingSlice.js"],"sourcesContent":["// canvasDrawingsSlice.js\n\nimport { createSlice } from '@reduxjs/toolkit';\n\nexport const canvasDrawingsSlice = createSlice({\n  name: 'canvasDrawings',\n  initialState: [],\n  reducers: {\n    addCanvasDrawing: (state, action) => {\n      state.push(action.payload);\n      console.log('Drawing saved:');\n    },\n    clearCanvasDrawings: (state) => {\n      return [];\n    },\n  },\n});\n\nexport const { addCanvasDrawing, clearCanvasDrawings } = canvasDrawingsSlice.actions;\nexport default canvasDrawingsSlice.reducer;\n"],"mappings":"AAAA;AAEA,OAASA,WAAW,KAAQ,kBAAkB,CAE9C,MAAO,IAAM,CAAAC,mBAAmB,CAAGD,WAAW,CAAC,CAC7CE,IAAI,CAAE,gBAAgB,CACtBC,YAAY,CAAE,EAAE,CAChBC,QAAQ,CAAE,CACRC,gBAAgB,CAAE,SAAAA,iBAACC,KAAK,CAAEC,MAAM,CAAK,CACnCD,KAAK,CAACE,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC,CAC1BC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC,CAC/B,CAAC,CACDC,mBAAmB,CAAE,SAAAA,oBAACN,KAAK,CAAK,CAC9B,MAAO,EAAE,CACX,CACF,CACF,CAAC,CAAC,CAEK,IAAAO,qBAAA,CAAkDZ,mBAAmB,CAACa,OAAO,CAArET,gBAAgB,CAAAQ,qBAAA,CAAhBR,gBAAgB,CAAEO,mBAAmB,CAAAC,qBAAA,CAAnBD,mBAAmB,CAAiC,OAAAP,gBAAA,CAAAO,mBAAA,EACrF,cAAe,CAAAX,mBAAmB,CAACc,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}