{"ast":null,"code":"var _jsxFileName = \"/home/tome/lighthouse/projectG/src/pages/canvas/drawPrompt.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DisplayWordsComponent = _ref => {\n  _s();\n  let {\n    remainingTime\n  } = _ref;\n  const board = useSelector(state => state.board);\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [currentTeam, setCurrentTeam] = useState(1);\n  const [gameFinished, setGameFinished] = useState(false);\n  const intervalRef = useRef(null);\n  useEffect(() => {\n    const team1Words = board.filter((_, index) => index % 2 === 0);\n    const team2Words = board.filter((_, index) => index % 2 === 1);\n    const teamsHaveWords = team1Words.length > 0 || team2Words.length > 0;\n    setGameFinished(currentWordIndex === board.length - 1);\n    if (teamsHaveWords) {\n      if (remainingTime === 1) {\n        setCurrentWordIndex(prevIndex => (prevIndex + 1) % board.length);\n        setCurrentTeam(prevTeam => prevTeam === 1 ? 2 : 1);\n      }\n    }\n  }, [board, remainingTime]);\n  useEffect(() => {\n    if (gameFinished) {\n      clearInterval(intervalRef.current);\n    }\n  }, [gameFinished]);\n  if (gameFinished) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Completed! Press Next.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"word-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Team \", currentTeam, \" Words:\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: board.map((card, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          display: index === currentWordIndex ? 'list-item' : 'none'\n        },\n        children: card.contents\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Time Remaining: \", remainingTime, \" seconds\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(DisplayWordsComponent, \"UQMFi8SQwnmkA0P83oIsEattV50=\", false, function () {\n  return [useSelector];\n});\n_c = DisplayWordsComponent;\nexport default DisplayWordsComponent;\nvar _c;\n$RefreshReg$(_c, \"DisplayWordsComponent\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useSelector","jsxDEV","_jsxDEV","DisplayWordsComponent","_ref","_s","remainingTime","board","state","currentWordIndex","setCurrentWordIndex","currentTeam","setCurrentTeam","gameFinished","setGameFinished","intervalRef","team1Words","filter","_","index","team2Words","teamsHaveWords","length","prevIndex","prevTeam","clearInterval","current","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","card","style","display","contents","id","_c","$RefreshReg$"],"sources":["/home/tome/lighthouse/projectG/src/pages/canvas/drawPrompt.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\n\nconst DisplayWordsComponent = ({ remainingTime }) => {\n  const board = useSelector((state) => state.board);\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [currentTeam, setCurrentTeam] = useState(1);\n  const [gameFinished, setGameFinished] = useState(false);\n\n  const intervalRef = useRef(null);\n\n  useEffect(() => {\n    const team1Words = board.filter((_, index) => index % 2 === 0);\n    const team2Words = board.filter((_, index) => index % 2 === 1);\n    const teamsHaveWords = team1Words.length > 0 || team2Words.length > 0;\n\n    setGameFinished(currentWordIndex === board.length-1);\n\n    if (teamsHaveWords) {\n      if (remainingTime === 1) {\n        setCurrentWordIndex((prevIndex) => (prevIndex + 1) % board.length);\n        setCurrentTeam((prevTeam) => (prevTeam === 1 ? 2 : 1));\n      }\n    }\n  }, [board, remainingTime]);\n\n  useEffect(() => {\n    if (gameFinished) {\n      clearInterval(intervalRef.current);\n    }\n  }, [gameFinished]);\n\n  if (gameFinished) {\n    return (\n      <div>\n        <h2>Completed! Press Next.</h2>\n      </div>\n    );\n  }\n\n  return (\n    <div className='word-container'>\n      <h2>Team {currentTeam} Words:</h2>\n      <h2>\n        {board.map((card, index) => (\n          <li key={card.id} style={{ display: index === currentWordIndex ? 'list-item' : 'none' }}>\n            {card.contents}\n          </li>\n        ))}\n        </h2>\n      <h2>Time Remaining: {remainingTime} seconds</h2>\n    </div>\n  );\n};\n\nexport default DisplayWordsComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}