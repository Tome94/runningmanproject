{"ast":null,"code":"import _slicedToArray from\"/home/tome/lighthouse/projectG/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useRef,useState,useEffect}from'react';import{startDrawing,draw,stopDrawing,clearCanvas}from'./canvasUtils';import{Link}from'react-router-dom';import{startMatch}from'../game/features/turns/turn';import{useDispatch}from'react-redux';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CanvasComponent=function CanvasComponent(_ref){var startTimer=_ref.startTimer,intervalRef=_ref.intervalRef;var canvasRef=useRef(null);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isDrawing=_useState2[0],setIsDrawing=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isEraserMode=_useState4[0],setIsEraserMode=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),lastX=_useState6[0],setLastX=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),lastY=_useState8[0],setLastY=_useState8[1];var handleMouseDown=function handleMouseDown(e){startDrawing(isDrawing,setIsDrawing,setLastX,setLastY,e);startTimer();// Start the timer on mousedown\n};var handleMouseMove=function handleMouseMove(e){draw(isDrawing,isEraserMode,lastX,lastY,setLastX,setLastY,e,canvasRef.current);};var handleMouseUp=function handleMouseUp(){stopDrawing(setIsDrawing);};var handleMouseOut=function handleMouseOut(){stopDrawing(setIsDrawing);};var toggleEraserMode=function toggleEraserMode(){setIsEraserMode(!isEraserMode);};var toggleClearCanvas=function toggleClearCanvas(){clearCanvas(canvasRef);};var saveCanvasDrawing=function saveCanvasDrawing(){// Your code to capture and save the canvas drawing goes here\nvar canvas=canvasRef.current;var context=canvas.getContext('2d');var imageData=canvas.toDataURL();// Get the base64 encoded image data\n// Now, you can do whatever you want with the captured drawing data, e.g., send it to a server, save it in state, etc.\nconsole.log('Drawing saved:',imageData);};var dispatch=useDispatch();var startGameHandler=function startGameHandler(){// Add action dispatch below\ndispatch(startMatch());};useEffect(function(){return function(){clearInterval(intervalRef.current);// Clear the interval on unmount\n};},[intervalRef]);// Empty dependency array ensures the effect runs only once (on component mount)\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"canvas\",children:[/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,width:800,height:600,onMouseDown:handleMouseDown,onMouseMove:handleMouseMove,onMouseUp:handleMouseUp,onMouseOut:handleMouseOut}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:toggleEraserMode,className:\"draw-erase\",children:isEraserMode?'Draw':'Erase'}),/*#__PURE__*/_jsx(\"button\",{onClick:toggleClearCanvas,className:\"Clear-canvas\",children:\"Clear Drawing\"}),/*#__PURE__*/_jsx(\"button\",{onClick:saveCanvasDrawing,children:\"Save Drawing\"})]}),/*#__PURE__*/_jsx(\"footer\",{children:/*#__PURE__*/_jsx(Link,{to:\"/game\",className:\"button-link\",onClick:startGameHandler,children:/*#__PURE__*/_jsx(\"h2\",{children:\"Next\"})})})]});};export default CanvasComponent;","map":{"version":3,"names":["React","useRef","useState","useEffect","startDrawing","draw","stopDrawing","clearCanvas","Link","startMatch","useDispatch","jsx","_jsx","jsxs","_jsxs","CanvasComponent","_ref","startTimer","intervalRef","canvasRef","_useState","_useState2","_slicedToArray","isDrawing","setIsDrawing","_useState3","_useState4","isEraserMode","setIsEraserMode","_useState5","_useState6","lastX","setLastX","_useState7","_useState8","lastY","setLastY","handleMouseDown","e","handleMouseMove","current","handleMouseUp","handleMouseOut","toggleEraserMode","toggleClearCanvas","saveCanvasDrawing","canvas","context","getContext","imageData","toDataURL","console","log","dispatch","startGameHandler","clearInterval","className","children","ref","width","height","onMouseDown","onMouseMove","onMouseUp","onMouseOut","onClick","to"],"sources":["/home/tome/lighthouse/projectG/src/pages/canvas/canvas.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport { startDrawing, draw, stopDrawing, clearCanvas } from './canvasUtils';\nimport { Link } from 'react-router-dom';\nimport { startMatch } from '../game/features/turns/turn';\nimport { useDispatch } from 'react-redux';\n\nconst CanvasComponent = ({ startTimer, intervalRef }) => {\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [isEraserMode, setIsEraserMode] = useState(false);\n  const [lastX, setLastX] = useState(0);\n  const [lastY, setLastY] = useState(0);\n\n  const handleMouseDown = (e) => {\n    startDrawing(isDrawing, setIsDrawing, setLastX, setLastY, e);\n    startTimer(); // Start the timer on mousedown\n  };\n\n  const handleMouseMove = (e) => {\n    draw(isDrawing, isEraserMode, lastX, lastY, setLastX, setLastY, e, canvasRef.current);\n  };\n\n  const handleMouseUp = () => {\n    stopDrawing(setIsDrawing);\n  };\n\n  const handleMouseOut = () => {\n    stopDrawing(setIsDrawing);\n  };\n\n  const toggleEraserMode = () => {\n    setIsEraserMode(!isEraserMode);\n  };\n\n  const toggleClearCanvas = () => {\n    clearCanvas(canvasRef);\n  };\n\n  const saveCanvasDrawing = () => {\n    // Your code to capture and save the canvas drawing goes here\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const imageData = canvas.toDataURL(); // Get the base64 encoded image data\n    // Now, you can do whatever you want with the captured drawing data, e.g., send it to a server, save it in state, etc.\n    console.log('Drawing saved:', imageData);\n  };\n\n  const dispatch = useDispatch();\n  const startGameHandler = () => {\n    // Add action dispatch below\n    dispatch(startMatch());\n  };\n\n  useEffect(() => {\n    return () => {\n      clearInterval(intervalRef.current); // Clear the interval on unmount\n    };\n  }, [intervalRef]); // Empty dependency array ensures the effect runs only once (on component mount)\n\n  return (\n    <div className='canvas'>\n      <canvas\n        ref={canvasRef}\n        width={800}\n        height={600}\n        onMouseDown={handleMouseDown}\n        onMouseMove={handleMouseMove}\n        onMouseUp={handleMouseUp}\n        onMouseOut={handleMouseOut}\n      />\n      <div>\n        <button onClick={toggleEraserMode} className='draw-erase'>\n          {isEraserMode ? 'Draw' : 'Erase'}\n        </button>\n        <button onClick={toggleClearCanvas} className='Clear-canvas'>\n          Clear Drawing\n        </button>\n        <button onClick={saveCanvasDrawing}>Save Drawing</button>\n      </div>\n\n      <footer>\n        <Link to='/game' className='button-link' onClick={startGameHandler}>\n          <h2>Next</h2>\n        </Link>\n      </footer>\n    </div>\n  );\n};\n\nexport default CanvasComponent;\n"],"mappings":"oHAAA,MAAO,CAAAA,KAAK,EAAIC,MAAM,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC1D,OAASC,YAAY,CAAEC,IAAI,CAAEC,WAAW,CAAEC,WAAW,KAAQ,eAAe,CAC5E,OAASC,IAAI,KAAQ,kBAAkB,CACvC,OAASC,UAAU,KAAQ,6BAA6B,CACxD,OAASC,WAAW,KAAQ,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE1C,GAAM,CAAAC,eAAe,CAAG,QAAlB,CAAAA,eAAeA,CAAAC,IAAA,CAAoC,IAA9B,CAAAC,UAAU,CAAAD,IAAA,CAAVC,UAAU,CAAEC,WAAW,CAAAF,IAAA,CAAXE,WAAW,CAChD,GAAM,CAAAC,SAAS,CAAGlB,MAAM,CAAC,IAAI,CAAC,CAC9B,IAAAmB,SAAA,CAAkClB,QAAQ,CAAC,KAAK,CAAC,CAAAmB,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA1CG,SAAS,CAAAF,UAAA,IAAEG,YAAY,CAAAH,UAAA,IAC9B,IAAAI,UAAA,CAAwCvB,QAAQ,CAAC,KAAK,CAAC,CAAAwB,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAhDE,YAAY,CAAAD,UAAA,IAAEE,eAAe,CAAAF,UAAA,IACpC,IAAAG,UAAA,CAA0B3B,QAAQ,CAAC,CAAC,CAAC,CAAA4B,UAAA,CAAAR,cAAA,CAAAO,UAAA,IAA9BE,KAAK,CAAAD,UAAA,IAAEE,QAAQ,CAAAF,UAAA,IACtB,IAAAG,UAAA,CAA0B/B,QAAQ,CAAC,CAAC,CAAC,CAAAgC,UAAA,CAAAZ,cAAA,CAAAW,UAAA,IAA9BE,KAAK,CAAAD,UAAA,IAAEE,QAAQ,CAAAF,UAAA,IAEtB,GAAM,CAAAG,eAAe,CAAG,QAAlB,CAAAA,eAAeA,CAAIC,CAAC,CAAK,CAC7BlC,YAAY,CAACmB,SAAS,CAAEC,YAAY,CAAEQ,QAAQ,CAAEI,QAAQ,CAAEE,CAAC,CAAC,CAC5DrB,UAAU,CAAC,CAAC,CAAE;AAChB,CAAC,CAED,GAAM,CAAAsB,eAAe,CAAG,QAAlB,CAAAA,eAAeA,CAAID,CAAC,CAAK,CAC7BjC,IAAI,CAACkB,SAAS,CAAEI,YAAY,CAAEI,KAAK,CAAEI,KAAK,CAAEH,QAAQ,CAAEI,QAAQ,CAAEE,CAAC,CAAEnB,SAAS,CAACqB,OAAO,CAAC,CACvF,CAAC,CAED,GAAM,CAAAC,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAA,CAAS,CAC1BnC,WAAW,CAACkB,YAAY,CAAC,CAC3B,CAAC,CAED,GAAM,CAAAkB,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAA,CAAS,CAC3BpC,WAAW,CAACkB,YAAY,CAAC,CAC3B,CAAC,CAED,GAAM,CAAAmB,gBAAgB,CAAG,QAAnB,CAAAA,gBAAgBA,CAAA,CAAS,CAC7Bf,eAAe,CAAC,CAACD,YAAY,CAAC,CAChC,CAAC,CAED,GAAM,CAAAiB,iBAAiB,CAAG,QAApB,CAAAA,iBAAiBA,CAAA,CAAS,CAC9BrC,WAAW,CAACY,SAAS,CAAC,CACxB,CAAC,CAED,GAAM,CAAA0B,iBAAiB,CAAG,QAApB,CAAAA,iBAAiBA,CAAA,CAAS,CAC9B;AACA,GAAM,CAAAC,MAAM,CAAG3B,SAAS,CAACqB,OAAO,CAChC,GAAM,CAAAO,OAAO,CAAGD,MAAM,CAACE,UAAU,CAAC,IAAI,CAAC,CACvC,GAAM,CAAAC,SAAS,CAAGH,MAAM,CAACI,SAAS,CAAC,CAAC,CAAE;AACtC;AACAC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAEH,SAAS,CAAC,CAC1C,CAAC,CAED,GAAM,CAAAI,QAAQ,CAAG3C,WAAW,CAAC,CAAC,CAC9B,GAAM,CAAA4C,gBAAgB,CAAG,QAAnB,CAAAA,gBAAgBA,CAAA,CAAS,CAC7B;AACAD,QAAQ,CAAC5C,UAAU,CAAC,CAAC,CAAC,CACxB,CAAC,CAEDN,SAAS,CAAC,UAAM,CACd,MAAO,WAAM,CACXoD,aAAa,CAACrC,WAAW,CAACsB,OAAO,CAAC,CAAE;AACtC,CAAC,CACH,CAAC,CAAE,CAACtB,WAAW,CAAC,CAAC,CAAE;AAEnB,mBACEJ,KAAA,QAAK0C,SAAS,CAAC,QAAQ,CAAAC,QAAA,eACrB7C,IAAA,WACE8C,GAAG,CAAEvC,SAAU,CACfwC,KAAK,CAAE,GAAI,CACXC,MAAM,CAAE,GAAI,CACZC,WAAW,CAAExB,eAAgB,CAC7ByB,WAAW,CAAEvB,eAAgB,CAC7BwB,SAAS,CAAEtB,aAAc,CACzBuB,UAAU,CAAEtB,cAAe,CAC5B,CAAC,cACF5B,KAAA,QAAA2C,QAAA,eACE7C,IAAA,WAAQqD,OAAO,CAAEtB,gBAAiB,CAACa,SAAS,CAAC,YAAY,CAAAC,QAAA,CACtD9B,YAAY,CAAG,MAAM,CAAG,OAAO,CAC1B,CAAC,cACTf,IAAA,WAAQqD,OAAO,CAAErB,iBAAkB,CAACY,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,eAE7D,CAAQ,CAAC,cACT7C,IAAA,WAAQqD,OAAO,CAAEpB,iBAAkB,CAAAY,QAAA,CAAC,cAAY,CAAQ,CAAC,EACtD,CAAC,cAEN7C,IAAA,WAAA6C,QAAA,cACE7C,IAAA,CAACJ,IAAI,EAAC0D,EAAE,CAAC,OAAO,CAACV,SAAS,CAAC,aAAa,CAACS,OAAO,CAAEX,gBAAiB,CAAAG,QAAA,cACjE7C,IAAA,OAAA6C,QAAA,CAAI,MAAI,CAAI,CAAC,CACT,CAAC,CACD,CAAC,EACN,CAAC,CAEV,CAAC,CAED,cAAe,CAAA1C,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}